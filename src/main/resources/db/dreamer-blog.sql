/*
SQLyog 企业版 - MySQL GUI v8.14 
MySQL - 5.5.53 : Database - dreamer-blog
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`dreamer-blog` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_bin */;

USE `dreamer-blog`;

/*Table structure for table `system_archives` */

DROP TABLE IF EXISTS `system_archives`;

CREATE TABLE `system_archives` (
  `id` varchar(32) NOT NULL,
  `title` varchar(128) NOT NULL COMMENT '文章标题',
  `properties` varchar(32) DEFAULT 'n' COMMENT '自定义属性',
  `image_path` varchar(128) DEFAULT NULL COMMENT '缩略图',
  `tag` varchar(128) DEFAULT NULL COMMENT '标签',
  `description` varchar(256) DEFAULT NULL COMMENT '内容摘要',
  `category_id` varchar(32) NOT NULL COMMENT '上级栏目',
  `comment` int(11) DEFAULT '1' COMMENT '允许评论',
  `subscribe` int(11) DEFAULT '1' COMMENT '允许订阅',
  `clicks` int(11) DEFAULT '0' COMMENT '浏览量',
  `weight` int(11) DEFAULT '0' COMMENT '权重',
  `status` int(11) DEFAULT '1' COMMENT '状态1:已发布0未发布',
  `create_by` varchar(32) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(32) DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_archives` */

insert  into `system_archives`(`id`,`title`,`properties`,`image_path`,`tag`,`description`,`category_id`,`comment`,`subscribe`,`clicks`,`weight`,`status`,`create_by`,`create_time`,`update_by`,`update_time`) values ('0d5391d212b34e91968f6a11c7374df6','Java进阶篇设计模式之二 ----- 工厂模式','p','20180927\\61951cd0cd6649eb9f0faa7bd371d326.jpg','factory,工厂模式','简单工厂模式是属于创建型模式，又叫做静态工厂方法模式。简单工厂模式是由一个工厂对象决定创建出哪一种产品类的实例。调用只需要告诉工厂类所需要的类型，工厂类就会返回需要的产品类工厂的子类。 可以说是工厂模式中最简单的一种。','91ac3c6983ce4e91a2a1babc532a104a',1,1,43,32,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-27 11:16:22',NULL,'2018-09-28 14:39:16'),('19b4a3307c6e488d92171bb25707f913','女程序员职业生涯该如何发展？','h,p','20180921\\558bd24d87e845be89274fd9660d1258.jpg','职业发展','不知道自己以后还能不能继续干这一行，结婚不到一年，也许某天开始会离开一两年，当再回来工作的时候，不知道是否能有单位再愿意聘请我，或者说自己能否再胜任这工作，因为这计算机编程专业发展的速度也相当快...三天不学都会落后，更何况是一年甚至更久','ae52186ba27f40acb4142fdf04cbff7c',1,1,23,23,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-21 13:43:51','9f4b807db2e94670bb02cdc212ea7389','2018-09-28 14:22:31'),('21b6b14edd7c48dabf24221d739ad1dd','每人的生命里都有一只碗','h,p','20180921\\eee5a87130c447e7a13c17ebb68505c8.jpg','','每个人的生命里都有一只碗，碗里盛着善良、信任、宽容、真诚，也盛着虚伪、狭隘、猜忌、自私……请剔除碗里的杂质，然后微笑着迎接另一只碗的碰撞，并发出你们清脆、爽朗的笑声吧！','ae52186ba27f40acb4142fdf04cbff7c',1,1,13,21,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-21 13:45:40','9f4b807db2e94670bb02cdc212ea7389','2018-09-28 14:22:36'),('47864f1e06334cdc8c87b9419dc63abf','I Tech You! 我教你','n','',NULL,'','e153c78da6b647d2a6a78196481374d8',1,1,0,0,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-28 14:45:58',NULL,'2018-09-28 14:45:57'),('598fb8d59fbf4bdca544d71cb64c1ce0','百度一下','n','',NULL,'','e153c78da6b647d2a6a78196481374d8',1,1,0,0,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-25 14:33:46',NULL,'2018-09-28 14:42:01'),('64e8955a03f64563b5d970085c43749f','陌上花开，可缓缓归矣','h,p','20180921\\2550cb74b9204cf0ab07de249b1a1405.jpg','花开','用最简单的代码，实现瀑布流布局，没有繁琐的css，没有jq，只需要做到以下就可以实现瀑布流的效果。思路很简单，看成是三列布局，分别用三个ul来调用。帝国cms列表模板','ae52186ba27f40acb4142fdf04cbff7c',1,1,21,2,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-21 13:39:21','9f4b807db2e94670bb02cdc212ea7389','2018-09-28 14:22:32'),('7681444e4ad1413c90aaf877d07d14de','Java进阶篇设计模式之三 ----- 建造者模式和原型模式','p','20180927\\54fbe4d3690846c1b9b315347fd5fe47.jpg','建造者,原型','建造者模式是属于创建型模式。建造者模式使用多个简单的对象一步一步构建成一个复杂的对象。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。\r\n简单的来说就是将一个复杂的东西抽离出来，对外提供一个简单的调用，可以在同样的构建过程创建不同的表示。和工厂模式很相似，不过相比而言更加注重组件的装配。','91ac3c6983ce4e91a2a1babc532a104a',1,1,32,2,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-27 11:19:00',NULL,'2018-09-28 14:39:20'),('7e1dfd15e5764a19910490ee70cd4462','大数据学习系列之五 ----- Hive整合HBase图文详解','p','20180927\\c75f3adc7d9c4106b9ed8cb5a039eb4b.png','大数据,hadoop,hive,hbase','在上一篇 大数据学习系列之四 ----- Hadoop+Hive环境搭建图文详解(单机) 和之前的大数据学习系列之二 ----- HBase环境搭建(单机) 中成功搭建了Hive和HBase的环境，并进行了相应的测试。本文主要讲的是如何将Hive和HBase进行整合。','91ac3c6983ce4e91a2a1babc532a104a',1,1,21,21,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-27 11:29:08',NULL,'2018-09-28 14:39:34'),('8d9e8dbab4c14735ab9ea13cbd26c178','模版引擎thymeleaf字符串Strings常见的使用方法','p','20180928\\41d887abce4f49459b76c3fa575781b9.jpg','thymeleaf','判断是不是为空:null: span th:if=${name} != null不为空/span span th:if=${name1} == null为空/span 判断是不是为空字符串: “” span th:if=${#strings.isEmpty(name1)}空的/span 判断是否相同...','ba73bdf892b54685950857387fc4f5f2',1,1,32,32,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-28 16:52:32',NULL,'2018-09-28 16:52:31'),('db6ad41b07a4423e997eddd9fd9b3c64','Java进阶篇设计模式之一 ----- 单例模式','p','20180927\\62cc05f1d5794e51994dbebe790426a4.jpg','singleton,单例','在刚学编程没多久就听说过设计模式的大名，不过由于当时还是个彻彻底底的菜鸟，并没有去触碰。直到在开始工作中对简单的业务代码较为熟悉之后，才正式的接触设计模式。当时最早接触的设计模式是工厂模式，不过本文讲的是单例模式，这里就留着下篇文章中在讲解。至于为什么先讲解单例模式? 那是因为单例模式是设计模式中最简单的... 。凡事总有个先后顺序，所以就先易后难了。好了，废话不多说了，开始进入正片。','91ac3c6983ce4e91a2a1babc532a104a',1,1,43,32,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-27 10:54:24',NULL,'2018-09-28 14:39:31'),('df9c9b4f4be74e159001275c79636923','我是怎么评价自己的？','h,p','20180921\\023a05e7138b4e9fa52ded3a7edb36d8.jpg','要强','为了挨打轻一些，问我哪里来的，我瞎说了一个说那个谁家的，结果，打得更凶。最后事情还原了真相，我妈说，你要说说奶奶家的，都不会打你了。从此以后，我知道撒谎是会付出更惨痛的代价的，我不','ae52186ba27f40acb4142fdf04cbff7c',1,1,34,32,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-21 13:41:51','9f4b807db2e94670bb02cdc212ea7389','2018-09-28 14:22:37'),('e6c4ecfe9976421993c410918c41f10c','网页中图片属性固定宽度，如何用js改变大小','h,p','20180921\\ab09459331564d7c86feb0d686f34831.jpg','js,html,css,script','后台上传图片后，都有一个图片属性，会指定图片的宽和高，如果图片固定了宽度和高度，PC端用max-width可以控制最大宽度，高度自动缩放。但是手机端就没法自动缩放，可以使用js来改变图片的style，通过100%比例，当然也可以设置px固定的高度宽度。','ae52186ba27f40acb4142fdf04cbff7c',1,1,32,32,1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-21 11:59:33','9f4b807db2e94670bb02cdc212ea7389','2018-09-28 14:22:41');

/*Table structure for table `system_article` */

DROP TABLE IF EXISTS `system_article`;

CREATE TABLE `system_article` (
  `id` varchar(32) COLLATE utf8mb4_bin NOT NULL,
  `aid` varchar(32) COLLATE utf8mb4_bin NOT NULL COMMENT '主表ID',
  `create_by` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ext01` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext02` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext03` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext04` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext05` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `html_content` text COLLATE utf8mb4_bin,
  `content` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;

/*Data for the table `system_article` */

insert  into `system_article`(`id`,`aid`,`create_by`,`create_time`,`update_by`,`update_time`,`ext01`,`ext02`,`ext03`,`ext04`,`ext05`,`html_content`,`content`) values ('0aec79bd02cb4d0db0fbddaa904d7f46','7681444e4ad1413c90aaf877d07d14de',NULL,'2018-01-01 00:00:00',NULL,'2018-09-27 11:18:59',NULL,NULL,NULL,NULL,NULL,NULL,'<h2 id=\"blogTitle0\">前言</h2><p>在<a href=\"https://www.cnblogs.com/xuwujing/p/9363142.html\">上一篇</a>中我们学习了工厂模式，介绍了简单工厂模式、工厂方法和抽象工厂模式。本篇则介绍设计模式中属于创建型模式的建造者模式和原型模式。</p><h2 id=\"blogTitle1\">建造者模式</h2><h3 id=\"blogTitle2\">简介</h3><blockquote><p>建造者模式是属于创建型模式。建造者模式使用多个简单的对象一步一步构建成一个复杂的对象。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。<br/>简单的来说就是将一个复杂的东西抽离出来，对外提供一个简单的调用，可以在同样的构建过程创建不同的表示。和工厂模式很相似，不过相比而言更加注重组件的装配。</p></blockquote><p>这里用一个示例来进行说明。<br/>我们一天吃的食物有这些，煎饼、盒饭、拉面、豆浆、牛奶和果汁。分为三餐、早餐、午餐和晚餐，餐点主要包含吃的(俗称饭)和喝的(豆浆，果汁之类的)，那么我们可以把煎饼和豆浆作为早餐，盒饭和果汁作为午餐，这样我们可以清楚的知道要吃早餐和午餐包含什么食物。</p><p>首先我们定义一个食物类，有两个属性，吃的和喝的。</p><pre>class&nbsp;Meal{&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;food;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;drinks;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getFood()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;food;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setFood(String&nbsp;food)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.food&nbsp;=&nbsp;food;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getDrinks()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;drinks;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setDrinks(String&nbsp;drinks)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.drinks&nbsp;=&nbsp;drinks;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p>定义了食物时候，我们在定义一个食物的标准接口，一份食物包含什么，其实也就是吃的和喝的。</p><pre>interface&nbsp;IBuilderFood{&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;buildFood();&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;buildDrinks();&nbsp;&nbsp;&nbsp;&nbsp;Meal&nbsp;createMeal();\r\n}</pre><p>食物接口定义一个吃的和一个喝的组件，然后通过<strong>createMeal()</strong>方法返回我们需要的食物。<br/>那么现在我们便可以定义一份早餐和午餐。<br/>代码示例:</p><pre>class&nbsp;Breakfast&nbsp;implements&nbsp;IBuilderFood{\r\n&nbsp;&nbsp;&nbsp;&nbsp;Meal&nbsp;meal;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Breakfast(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meal=new&nbsp;Meal();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;buildFood()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meal.setFood(&quot;煎饼&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;buildDrinks()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meal.setDrinks(&quot;豆浆&quot;);&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Meal&nbsp;createMeal()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;meal;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}class&nbsp;Lunch&nbsp;implements&nbsp;IBuilderFood{\r\n&nbsp;&nbsp;&nbsp;&nbsp;Meal&nbsp;meal;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Lunch(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meal=new&nbsp;Meal();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;buildFood()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meal.setFood(&quot;盒饭&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;buildDrinks()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;meal.setDrinks(&quot;果汁&quot;);&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Meal&nbsp;createMeal()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;meal;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p>定义完之后，建造早餐和午餐的的过程已经完毕了。但是这并不是建造者模式，它有个核心的Director(导演者)，它用来创建复杂对象的部分，对该部分进行完整的创建或者按照一定的规则进行创建。那么这里我们可以创建一个Director，用来创建一份餐点。至于创建的是什么餐点，它不用知道，这一点由调用者来进行决定。</p><p>这里我们就可以定义一个饭店，可以创建一份餐点，创建什么餐点有顾客决定。<br/>代码示例:</p><pre>class&nbsp;FoodStore{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Meal&nbsp;createBreakfast(IBuilderFood&nbsp;bf){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bf.buildDrinks();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bf.buildFood();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;bf.createMeal();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p>创建完成这个Director之后，我们再来进行调用测试。</p><p><strong>代码示例：</strong></p><pre>public&nbsp;class&nbsp;BuilderTest&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FoodStore&nbsp;foodStore=new&nbsp;FoodStore();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Meal&nbsp;meal=foodStore.createBreakfast(new&nbsp;Breakfast());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Meal&nbsp;meal2=foodStore.createBreakfast(new&nbsp;Lunch());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;小明早上吃的是:&quot;+meal.getFood()+&quot;,喝的饮料是:&quot;+meal.getDrinks());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;小明中午吃的是:&quot;+meal2.getFood()+&quot;,喝的饮料是:&quot;+meal2.getDrinks());&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n\r\n}</pre><p><strong>输出结果：</strong></p><pre>小明早上吃的是:煎饼,喝的饮料是:豆浆小明中午吃的是:盒饭,喝的饮料是:果汁</pre><p>简单的介绍了下建造者模式的运作原理，可以概况为这4点:</p><ol class=\" list-paddingleft-2\"><li><p>Builder：指定一个抽象的接口，规定该产品所需实现部件的创建，并不涉及具体的对象部件的创建。</p></li><li><p>ConcreteBuilder：需实现Builder接口，并且针对不同的逻辑，进行不同方法的创建，最终提供该产品的实例。</p></li><li><p>Director：用来创建复杂对象的部分，对该部分进行完整的创建或者按照一定的规则进行创建。</p></li><li><p>Product：示被构造的复杂对象。</p></li></ol><p><strong>使用场景:</strong><br/>适用一些基本组件不便，但是组合经常变化的时候。比如超市促销的大礼包。</p><p><strong>优点:</strong></p><ol class=\" list-paddingleft-2\"><li><p>建造者独立，易扩展。</p></li><li><p>便于控制细节风险。</p></li></ol><p><strong>缺点</strong></p><ol class=\" list-paddingleft-2\"><li><p>内部结构复杂，不易于理解。</p></li><li><p>产品直接需要有共同点，范围有控制。</p></li></ol><h2 id=\"blogTitle3\">原型模式</h2><blockquote><p>原型模式（Prototype Pattern）是用于创建重复的对象，同时又能保证性能。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。</p></blockquote><p>一般来说我们在创建对象的时候是直接创建的，但是创建该对象的代价很大的时候，重复的二次创建就有些不划算，这时我们就可以使用原型模式。<br/>打个比方，我们都发送过邮件，在节日的时候一般发送的是祝福语句，在这些祝福语句中，一般除了名字不一样之外，大部分都是一样的。这时我们就可以利用该模式来进行相应出创建。</p><p>这里还是用一个的简单的示例来说明。<br/>小明和小红在同一天生日，然后我们需要给他们发送邮件进行祝福，但是由于比较懒，祝福语除了名字之外都是一样的。这时我们就可以先完成祝福语的编写，然后克隆该祝福语，最后根据不同的名称进行发送。不过这里就从简了，只是简单的打印下而已。</p><p><strong>代码示例：</strong></p><pre>public&nbsp;class&nbsp;PrototypeTest&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mail&nbsp;mail=new&nbsp;Mail();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mail.setMsg(&quot;生日快乐!&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mail&nbsp;mail2=(Mail)&nbsp;mail.clone();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mail.setName(&quot;小明&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mail2.setName(&quot;小红&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(mail.toString());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(mail2.toString());\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}&nbsp;class&nbsp;Mail&nbsp;implements&nbsp;Cloneable&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;name;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;msg;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getName()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setName(String&nbsp;name)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.name&nbsp;=&nbsp;name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getMsg()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;msg;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setMsg(String&nbsp;msg)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.msg&nbsp;=&nbsp;msg;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Object&nbsp;clone()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;clone&nbsp;=&nbsp;null;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clone&nbsp;=&nbsp;super.clone();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(CloneNotSupportedException&nbsp;e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;clone;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;toString()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;name&nbsp;+&nbsp;&quot;:&quot;&nbsp;+&nbsp;msg&nbsp;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n}</pre><p>输出结果：</p><pre>小明:生日快乐!\r\n小红:生日快乐!</pre><p>看完原型模式的创建，是不是感觉就是和Java中克隆即为类似呢?<br/>实际上它的核心也就是克隆。<br/>克隆有两种，浅克隆和深克隆，本文主要介绍的是浅克隆。<br/><strong>浅克隆:</strong></p><blockquote><p>在浅克隆中，如果原型对象的成员变量是值类型，将复制一份给克隆对象；如果原型对象的成员变量是引用类型，则将引用对象的地址复制一份给克隆对象，也就是说原型对象和克隆对象的成员变量指向相同的内存地址。<br/>简单来说，在浅克隆中，当对象被复制时只复制它本身和其中包含的值类型的成员变量，而引用类型的成员对象并没有复制。<br/>实现Cloneable接口并重写Object类中的clone()方法；</p></blockquote><p><strong>深克隆:</strong></p><blockquote><p>在深克隆中，无论原型对象的成员变量是值类型还是引用类型，都将复制一份给克隆对象，深克隆将原型对象的所有引用对象也复制一份给克隆对象。</p><p>简单来说，在深克隆中，除了对象本身被复制外，对象所包含的所有成员变量也将复制。<br/>实现Serializable接口，通过对象的序列化和反序列化实现克隆，可以实现真正的深度克隆。</p></blockquote><p>使用场景:</p><ol class=\" list-paddingleft-2\"><li><p>类初始化的时候需要消耗大量资源的时候；</p></li><li><p>获取数据库连接繁琐的时候；</p></li><li><p>一个对象，有很多个修改者的时候；</p></li></ol><p><strong>优点:</strong><br/>1.可以提升性能；</p><p><strong>缺点:</strong><br/>1.因为必须实现Cloneable 接口，所以用起来可能不太方便。</p><p><br/></p>'),('296ef5fab8094e9187f77c351aff8f9c','8d9e8dbab4c14735ab9ea13cbd26c178',NULL,'2018-01-01 00:00:00',NULL,'2018-09-28 16:52:31',NULL,NULL,NULL,NULL,NULL,NULL,'<p><span style=\"color:#4F4F4F;text-align:justify;background-color:#FFFFFF;font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">判断是不是为空:null: </span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;text-align:justify;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">&lt;span th:if=&quot;${name} != null&quot;&gt;不为空&lt;/span&gt;</span></code><span style=\"color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"></span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;text-align:justify;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">&lt;span th:if=&quot;${name1} == null&quot;&gt;为空&lt;/span&gt;</span></code><span style=\"color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"></span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><span style=\"color:#4F4F4F;text-align:justify;background-color:#FFFFFF;font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">判断是不是为空字符串: “” </span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;text-align:justify;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">&lt;span th:if=&quot;${#strings.isEmpty(name1)}&quot;&gt;空的&lt;/span&gt;</span></code><span style=\"color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"></span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><span style=\"color:#4F4F4F;text-align:justify;background-color:#FFFFFF;font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">判断是否相同： </span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;text-align:justify;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">&lt;span th:if=&quot;${name} eq &#39;jack&#39;&quot;&gt;相同于jack,&lt;/span&gt;</span></code><span style=\"color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"></span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;text-align:justify;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">&lt;span th:if=&quot;${name} eq &#39;ywj&#39;&quot;&gt;相同于ywj,&lt;/span&gt;</span></code><span style=\"color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"></span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;text-align:justify;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">&lt;span th:if=&quot;${name} ne &#39;jack&#39;&quot;&gt;不相同于jack,&lt;/span&gt;</span></code><span style=\"color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"></span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><span style=\"color:#4F4F4F;text-align:justify;background-color:#FFFFFF;font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">不存在设置默认值： </span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;text-align:justify;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">&lt;span th:text=&quot;${name2} ?: &#39;默认值&#39;&quot;&gt;&lt;/span&gt;</span></code><span style=\"color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"></span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><span style=\"color:#4F4F4F;text-align:justify;background-color:#FFFFFF;font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">是否包含(分大小写): </span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;text-align:justify;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">&lt;span th:if=&quot;${#strings.contains(name,&#39;ez&#39;)}&quot;&gt;包ez&lt;/span&gt;</span></code><span style=\"color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"></span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;text-align:justify;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">&lt;span th:if=&quot;${#strings.contains(name,&#39;y&#39;)}&quot;&gt;包y&lt;/span&gt;</span></code><span style=\"color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"></span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><span style=\"color:#4F4F4F;text-align:justify;background-color:#FFFFFF;font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">是否包含（不分大小写） </span><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;color:#4f4f4f;font-family:-apple-system, &quot;sf ui text&quot;, arial, &quot;pingfang sc&quot;, &quot;hiragino sans gb&quot;, &quot;microsoft yahei&quot;, &quot;wenquanyi micro hei&quot;, sans-serif, simhei, simsun;text-align:justify;background-color:#ffffff;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;text-align:justify;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">&lt;span th:if=&quot;${#strings.containsIgnoreCase(name,&#39;y&#39;)}&quot;&gt;包y&lt;/span&gt;</span></code><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">同理。。。下面的和JAVA的String基本一样。。。。不笔记解释，官网有</span></p><p style=\"box-sizing:border-box;outline:0px;padding:0px;color:#4F4F4F;text-align:justify;word-break:break-all;line-height:2em;\"><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.startsWith(name,&#39;o&#39;)}</span></code><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.endsWith(name, &#39;o&#39;)}</span></code><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.indexOf(name,frag)}</span></code><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">// 下标 <br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/></span><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.substring(name,3,5)}</span></code><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">// 截取 <br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/></span><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.substringAfter(name,prefix)}</span></code><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">// 从 prefix之后的一位开始截取到最后,比如 (ywj,y) = wj, 如果是(abccdefg,c) = cdefg//里面有2个c,取的是第一个c <br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/></span><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.substringBefore(name,suffix)}</span></code><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">// 同上，不过是往前截取 <br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/></span><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.replace(name,&#39;las&#39;,&#39;ler&#39;)}</span></code><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">// 替换 <br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/></span><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.prepend(str,prefix)}</span></code><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">// 拼字字符串在str前面 <br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/></span><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.append(str,suffix)}</span></code><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">// 和上面相反，接在后面 <br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/></span><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.toUpperCase(name)}</span></code><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.toLowerCase(name)}</span></code><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.trim(str)}</span></code><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.length(str)}</span></code><br style=\"box-sizing:border-box;outline:0px;word-break:break-all;\"/><code style=\"box-sizing:border-box;outline:0px;font-family:consolas, inconsolata, courier, monospace;font-size:14px;line-height:22px;color:#c7254e;background-color:#f9f2f4;border-radius:2px;padding:4px 2px 0px;word-break:break-all;\"><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">${#strings.abbreviate(str,10)}</span></code><span style=\"font-size:14px;font-family:微软雅黑, &quot;microsoft yahei&quot;;\">// 我的理解是 str截取0-10位，后面的全部用…这个点代替，注意，最小是3位</span></p><p><br/></p>'),('367a090a62e943119f18fd1cdc623f15','0d5391d212b34e91968f6a11c7374df6',NULL,'2018-01-01 00:00:00',NULL,'2018-09-27 11:16:21',NULL,NULL,NULL,NULL,NULL,NULL,'<h2 id=\"blogTitle0\">前言</h2><p>在<a href=\"https://www.cnblogs.com/xuwujing/p/9277266.html\">上一篇</a>中我们学习了单例模式，介绍了单例模式创建的几种方法以及最优的方法。本篇则介绍设计模式中的工厂模式，主要分为简单工厂模式、工厂方法和抽象工厂模式。</p><h2 id=\"blogTitle1\">简单工厂模式</h2><blockquote><p>简单工厂模式是属于创建型模式，又叫做静态工厂方法模式。简单工厂模式是由一个工厂对象决定创建出哪一种产品类的实例。调用只需要告诉工厂类所需要的类型，工厂类就会返回需要的产品类工厂的子类。 可以说是工厂模式中最简单的一种。</p></blockquote><p>打个比方，我们在电脑经常玩游戏，我们只需要告诉电脑我们要玩什么游戏，电脑就会打开这个游戏，我们并不需要关心游戏是怎么运作的。<br/>我们可以在以下的代码中进行相应的说明。</p><p>我们首先创建一个游戏总类接口，包含一个玩游戏的方法； 然后再由各自的游戏类继承该类并实现该类的方法，最后在创建一个工程类根据不同的游戏进行创建对象。<br/>那么实现的代码如下：</p><p><strong>代码示例：</strong></p><pre>\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;LOL=&quot;LOL&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;DNF=&quot;DNF&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Game&nbsp;game=&nbsp;ComputerFactory.playGame(LOL);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Game&nbsp;game2=&nbsp;ComputerFactory.playGame(DNF);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;game.play();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;game2.play();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}interface&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;play();\r\n}class&nbsp;LOL&nbsp;implements&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;play()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;正在玩LOL...&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n}class&nbsp;DNF&nbsp;implements&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;play()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;正在玩DNF...&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n}class&nbsp;ComputerFactory{&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;LOL=&quot;LOL&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;DNF=&quot;DNF&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;Game&nbsp;playGame(String&nbsp;game){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(LOL.equalsIgnoreCase(game)){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;LOL();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else&nbsp;if(DNF.equalsIgnoreCase(game)){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;DNF();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p><strong>输出结果：</strong></p><pre>正在玩LOL...\r\n正在玩DNF...</pre><p>我们在使用简单工厂模式进行实现该功能之后，会发现我们将游戏类的实例化放到了工厂类中实现，隐藏了对象创建的细节，并且不需要知道是怎么玩的，只需要知道调用该工厂类就行了。而且方便切换，因为只需更改工厂类传递的类型值就行了。<br/>但是我们也发现一个问题，如果我们需要新增一个游戏类，那么需要新定义一个接口，然后还要在工厂类中添加一个判断分支，如果少量的话还好，但是大量的话就比较麻烦了，并且这也违背了开放-封闭原则。</p><h2 id=\"blogTitle2\">工厂方法模式</h2><blockquote><p>工厂方法模式是 Java 中最常用的设计模式之一，属于创建型模式。定义一个创建对象的接口，让其子类自己决定实例化哪一个工厂类，工厂模式使其创建过程延迟到子类进行。</p></blockquote><p>在简单工厂模式中，我们发现在添加子类的时候，相应的也需要在工厂类中添加一个判断分支，是违背了开放-封闭原则的。而工厂方法模式就是主要解决这个问题的。</p><p>这里还是用上述的玩游戏示例，只不过这里每个游戏都是由各自的游戏工厂类实现。主要区别就是由一个 工厂类变成了多个了，降低了耦合度。如果新增一个游戏类，相应的也只需在新增一个工厂类而已， 并且完美的遵循了开放-封闭原则。</p><p>将上述代码更改之后，相应的代码实现如下：</p><p><strong>代码示例：</strong></p><pre>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;LOL=&quot;LOL&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;DNF=&quot;DNF&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;WOW=&quot;WOW&quot;;&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Game&nbsp;game3=new&nbsp;LOLFactory().playGame(LOL);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Game&nbsp;game4=new&nbsp;DNFFactory().playGame(DNF);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Game&nbsp;game5=new&nbsp;WOWFactory().playGame(WOW);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;game3.play();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;game4.play();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;game5.play();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\ninterface&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;play();\r\n}class&nbsp;LOL&nbsp;implements&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;play()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;正在玩LOL...&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n}class&nbsp;DNF&nbsp;implements&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;play()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;正在玩DNF...&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n}class&nbsp;WOW&nbsp;&nbsp;implements&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;play()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;正在玩WOW...&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n}interface&nbsp;ComputerFactory2{&nbsp;&nbsp;&nbsp;&nbsp;Game&nbsp;playGame(String&nbsp;game);\r\n}class&nbsp;LOLFactory&nbsp;implements&nbsp;ComputerFactory2{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Game&nbsp;playGame(String&nbsp;game)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;LOL();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}class&nbsp;DNFFactory&nbsp;implements&nbsp;ComputerFactory2{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Game&nbsp;playGame(String&nbsp;game)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;DNF();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}class&nbsp;WOWFactory&nbsp;implements&nbsp;ComputerFactory2{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Game&nbsp;playGame(String&nbsp;game)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;WOW();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p>输出结果：</p><pre>正在玩LOL...\r\n正在玩DNF...\r\n正在玩WOW...</pre><p>可以看到使用工厂方法模式之后，我们的代码更加清晰了，扩展性也变高了，如果想增加一个产品，只要扩展一个工厂类就可以。但是随之而来的是在系统中增加了复杂度，每增加一个产品时，都需要增加一个具体类和对象实现工厂类。<br/>所以在是否使用该模式需注意。<br/>使用该模式比较经典的使用案例是大名鼎鼎的<strong>hibernate</strong>框架在选择数据库方言这块。但是如果直接简单的new一个对象的话，则不必使用了，若使用反而会增加系统的复杂度。</p><h2 id=\"blogTitle3\">抽象工厂模式</h2><blockquote><p>抽象工厂模式是围绕一个超级工厂创建其他工厂。该超级工厂又称为其他工厂的工厂。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。也就是提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。</p></blockquote><p>抽象工厂模式相比工厂方法模式来说更加复杂，也更难理解，但是更容易扩展。<br/>抽象工厂模式就将同一类的产品子类归为一类，让他们继承同一个抽象子类，然后把它们当作一组，然后再把多个组组成一个族。<br/>打个比方，还是上述的玩游戏，我们可以把<strong>LOL</strong>和<strong>WOW</strong>当作<strong>PVP</strong>类型的游戏，也可以把<strong>DNF</strong>和<strong>WOW</strong>当作<strong>PVE</strong>类型的游戏。</p><p>那么相应更改的代码如下：</p><p><strong>代码示例：</strong></p><pre>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;LOL=&quot;LOL&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;DNF=&quot;DNF&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;String&nbsp;WOW=&quot;WOW&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ComputerFactory3&nbsp;cf3=new&nbsp;PVPFactory();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cf3.playGame().play();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cf3.playGame2().play();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ComputerFactory3&nbsp;cf4=new&nbsp;PVEFactory();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cf4.playGame().play();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cf4.playGame2().play();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n}interface&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;play();\r\n}class&nbsp;LOL&nbsp;implements&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;play()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;正在玩LOL...&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n}class&nbsp;DNF&nbsp;implements&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;play()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;正在玩DNF...&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n}class&nbsp;WOW&nbsp;&nbsp;implements&nbsp;Game{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;play()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;正在玩WOW...&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n}interface&nbsp;ComputerFactory3{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Game&nbsp;playGame();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Game&nbsp;playGame2();\r\n}class&nbsp;PVPFactory&nbsp;implements&nbsp;ComputerFactory3{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Game&nbsp;playGame()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;LOL();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Game&nbsp;playGame2()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;WOW();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n}class&nbsp;PVEFactory&nbsp;implements&nbsp;ComputerFactory3{&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Game&nbsp;playGame()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;DNF();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;@Override\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Game&nbsp;playGame2()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;WOW();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n}</pre><p><strong>输出结果：</strong></p><pre>正在玩LOL...\r\n正在玩WOW...\r\n正在玩DNF...\r\n正在玩WOW...</pre><p>在抽象工厂模式中，可以在不需要知道产品是怎么样的，只需知道是哪个工厂类就行了。我们也可以根据子类的共同的特性而将它们设计在一起，组成一个相同类型组，可以很方便的直接调用。但是相对的，产品族比较难以扩展，增加一个产品，需要增加相应的接口和实现类。例如某个品牌的手机，有不同系列，每个系列有不同的型号，如果只是增加型号的话，比较容易，但是相对的，增加某个系列就比较麻烦了。<br/>所以我们在使用抽象工厂模式，也需要相应的结合实际场景来使用。</p><p><br/></p>'),('5f9235a732784699b902205365c6e677','db6ad41b07a4423e997eddd9fd9b3c64',NULL,'2018-01-01 00:00:00',NULL,'2018-09-27 10:54:30',NULL,NULL,NULL,NULL,NULL,NULL,'<h2 id=\"blogTitle0\">前言</h2><p>在刚学编程没多久就听说过<strong>设计模式</strong>的大名，不过由于当时还是个彻彻底底的菜鸟，并没有去触碰。直到在开始工作中对简单的业务代码较为熟悉之后，才正式的接触<strong>设计模式</strong>。当时最早接触的设计模式是<strong>工厂模式</strong>，不过本文讲的是<strong>单例模式</strong>，这里就留着下篇文章中在讲解。至于为什么先讲解<strong>单例模式</strong>? 那是因为<strong>单例模式</strong>是设计模式中最简单的... 。凡事总有个先后顺序，所以就先易后难了。好了，废话不多说了，开始进入正片。</p><h2 id=\"blogTitle1\">设计模式简介</h2><p><strong>说明：这里说了的简介就是真的 “简介”。</strong></p><h3 id=\"blogTitle2\">什么是设计模式</h3><blockquote><p>设计模式是一套被反复使用的、多数人知晓的、经过分类编目的、代码设计经验的总结。</p></blockquote><h3 id=\"blogTitle3\">为什么使用设计模式</h3><blockquote><p>使用设计模式是为了重用代码、让代码更容易被他人理解、保证代码可靠性。</p></blockquote><h3 id=\"blogTitle4\">设计模式类型</h3><p>设计模式有23种类型。按照主要分类可以分为三大类:</p><p><strong>一、创建型模式</strong></p><blockquote><p>这些设计模式提供了一种在创建对象的同时隐藏创建逻辑的方式，而不是使用 new运算符直接实例化对象。这使得程序在判断针对某个给定实例需要创建哪些对象时更加灵活。</p></blockquote><ul class=\" list-paddingleft-2\"><li><p>单例模式</p></li><li><p>工厂模式</p></li><li><p>抽象工厂模式</p></li><li><p>建造者模式</p></li><li><p>原型模式</p></li></ul><p><strong>二、结构型模式</strong></p><blockquote><p>这些设计模式关注类和对象的组合。继承的概念被用来组合接口和定义组合对象获得新功能的方式。</p></blockquote><ul class=\" list-paddingleft-2\"><li><p>适配器模式</p></li><li><p>桥接模式</p></li><li><p>过滤器模式</p></li><li><p>组合模式</p></li><li><p>装饰器模式</p></li><li><p>外观模式</p></li><li><p>享元模式</p></li><li><p>代理模式</p></li></ul><p><strong>三、行为型模式</strong></p><blockquote><p>这些设计模式特别关注对象之间的通信。</p></blockquote><ul class=\" list-paddingleft-2\"><li><p>责任链模式</p></li><li><p>命令模式</p></li><li><p>解释器模式</p></li><li><p>迭代器模式</p></li><li><p>中介者模式<br/></p></li><li><p>备忘录模式</p></li><li><p>观察者模式</p></li><li><p>状态模式</p></li><li><p>空对象模式</p></li><li><p>策略模式</p></li><li><p>模板模式</p></li><li><p>访问者模式</p></li></ul><h3 id=\"blogTitle5\">设计模式的原则</h3><p>设计模式的六大原则</p><ol class=\" list-paddingleft-2\"><li><p>开闭原则：对扩展开放，对修改关闭。</p></li><li><p>里氏代换原则：对开闭原则的补充。任何基类可以出现的地方，子类一定可以出现。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。</p></li><li><p>依赖倒转原则：针对接口编程，依赖于抽象而不依赖于具体。</p></li><li><p>接口隔离原则：尽量使用多个隔离的接口，为了降低类之间的耦合度。</p></li><li><p>迪米特法则：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。</p></li><li><p>合成复用原则：尽量使用合成/聚合的方式，而不是使用继承。</p></li></ol><h2 id=\"blogTitle6\">单例模式</h2><h3 id=\"blogTitle7\">什么是单例模式</h3><p>保证一个系统中的某个类只有一个实例而且该实例易于外界访问。例如Windows界面的任务管理器就可以看做是一个单例。</p><h3 id=\"blogTitle8\">单例模式的使用场景</h3><p>在程序中比较常用的是<strong>数据库连接池</strong>、<strong>线程池</strong>、<strong>日志对象</strong>等等。</p><h3 id=\"blogTitle9\">单例模式使用</h3><p>最早我们在学习<strong>单例模式</strong>的时候，基本都会接触这两种模式：饿汉式和饱汉式(懒汉式)。<br/>那我们先来看看这两个模式的实现。</p><p><strong>饿汉式</strong><br/>定义一个私有的构造方法，并将自身的实例对象设置为一个私有属性,并加上static和final修饰符，然后通过公共的静态方法调用返回实例。</p><pre>&nbsp;class&nbsp;SingletonTest1&nbsp;{&nbsp;&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;SingletonTest1()&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;final&nbsp;SingletonTest1&nbsp;instance&nbsp;=&nbsp;new&nbsp;SingletonTest1();&nbsp;&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;SingletonTest1&nbsp;getInstance()&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;instance;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n}</pre><p><strong>饱汉式</strong><br/>定义一个私有的构造方法，定义一个该类静态私有的变量，然后定义一个公共的静态方法，对该类的值进行空判断，不为空直接返回，否则重新构建一个。</p><pre>class&nbsp;SingletonTest2&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;SingletonTest2()&nbsp;{&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;SingletonTest2&nbsp;instance;&nbsp;&nbsp;&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;SingletonTest2&nbsp;getInstance()&nbsp;{&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(instance&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instance&nbsp;=&nbsp;new&nbsp;SingletonTest2();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;instance;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;}</pre><p>简单的介绍了这两种的模式，然后我们再来看看这两种模式的优缺点吧。<br/><strong>饿汉式</strong></p><ul class=\" list-paddingleft-2\"><li><p>优点：写起来很简单，并且不会因为不加<strong>synchronized</strong>关键字而造成的线程不安全问题。</p></li><li><p>缺点：当该类被加载的时候，会初始化该实例和静态变量并被创建并分配内存空间，并且会一直占用内存。</p></li></ul><p><strong>饱汉式</strong></p><ul class=\" list-paddingleft-2\"><li><p>优点：写起来很简单，在第一次调用的时候才会初始化，节省了内存。</p></li><li><p>缺点：线程不安全，多个线程调用可能会出现多个实例。</p></li><li><p>总结：书写简单，线程不安全，效率还行。</p></li></ul><p>虽然 <strong>饱汉式</strong>可以通过加上<strong>synchronized</strong>关键字保证线程安全。但是效率方法来说还不说是最优。</p><p>这里在介绍下个人认为在JDK1.5之前最优的两种写法，一种是<strong>静态内部类</strong>，另一种是<strong>双重锁检查</strong>。</p><p><strong>静态内部类</strong><br/>定义一个私有的构造方法，定义一个该类私有静态的内部类，然后在内部类中定义一个该类的静态变量，然后通过公共的final修饰的静态方法调用返回实例。</p><pre>&nbsp;&nbsp;class&nbsp;&nbsp;SingletonTest4&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;SingletonTest4(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;class&nbsp;SingletonTest5{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;SingletonTest4&nbsp;instance&nbsp;=&nbsp;new&nbsp;SingletonTest4();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;final&nbsp;SingletonTest4&nbsp;getInstance(){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;SingletonTest5.instance;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;}</pre><p>因为该类的内部类是私有的，除了对外公布的公共静态方法getInstance()，是无法访问的。因为它是延迟加载，所以读取读取实例的时候不会进行同步，几乎没有性能的缺陷，而且还是线程安全的，并且不依赖JDK的版本。</p><p><strong>双重锁检查</strong><br/>定义一个私有构造方法，通过<strong>volatile</strong>定义静态私有变量，保证了该变量的可见性，然后定义一个共有的静态方法，第一次对该对象实例化时与否判断，不为空直接返回，提升效率；然后使用<strong>synchronized</strong> 进行同步代码块，防止对象未初始化时，在多线程访问该对象在第一次创建后，再次重复的被创建；然后第二次对该对象实例化时与否判断，如果未初始化，则初始化，否则直接返回该实例。</p><pre>&nbsp;&nbsp;class&nbsp;SingletonTest6&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;SingletonTest6()&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;volatile&nbsp;SingletonTest6&nbsp;instance;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;SingletonTest6&nbsp;getIstance()&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(instance&nbsp;==&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;synchronized&nbsp;(SingletonTest6.class)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(instance&nbsp;==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instance&nbsp;=&nbsp;new&nbsp;SingletonTest6();&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;instance;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p>这种模式在很长的一段时间内可以说是最优的了，内存占用低，效率高，线程安全，多线程操作原子性。但是有个缺点就是书写麻烦，对新手不太友好。</p><p>JDK1.5之后出现了枚举，并且完美支持单例模式，并且线程安全、效率高！但是这些不是最重要的，最重要的是书写超级简单！究竟有多简单，看下面的示例应该就可以了解一下了。。。</p><p><strong>枚举单例</strong></p><pre>&nbsp;enum&nbsp;SingletonTest7{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INSTANCE;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p>对的，你没看错，就这点代码，其它不需要了。。。<br/>枚举需要在JDK1.5之后的版本，它无偿提供序列化机制，绝对防止多次实例化，即使在面对复杂的序列化或者反射攻击的时候。这种方法也被Effective Java作者Josh Bloch 所提倡。</p><h2 id=\"blogTitle10\">总结</h2><p>单例模式的几种使用就到这了，那么我们来总结下使用单例模式需要注意什么(不包括枚举)。</p><ol class=\" list-paddingleft-2\"><li><p>构造方法私有化（private）;</p></li><li><p>定义一个私有(private)静态(static)实例化对象;</p></li><li><p>对外提供一个公共(public)静态(static)的方法得到该实例;</p></li></ol><p>原创不易，如果感觉不错，希望给个推荐！您的支持是我写作的最大动力！<br/>版权声明:<br/>作者：虚无境<br/>博客园出处：<a href=\"http://www.cnblogs.com/xuwujing\" class=\"uri\">http://www.cnblogs.com/xuwujing</a><br/>CSDN出处：<a href=\"http://blog.csdn.net/qazwsxpcm\" class=\"uri\">http://blog.csdn.net/qazwsxpcm</a>　　　　<br/>个人博客出处：<a href=\"http://www.panchengming.com\" class=\"uri\">http://www.panchengming.com</a></p><p>如果你对生活感觉到了绝望，请不要气馁。因为这样只会让你更加绝望！\r\n所谓的希望往往都是在绝望中萌发的，所以，请不要放弃希望！</p><p><br/></p>'),('63b285cfd0be428ba15848e1e004d8ba','64e8955a03f64563b5d970085c43749f',NULL,'2018-01-01 00:00:00',NULL,'2018-09-21 13:39:20',NULL,NULL,NULL,NULL,NULL,NULL,'<p style=\"line-height: 2em;\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><strong>诗句引申</strong></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">“陌上花开，可缓缓归矣。” 含义：（夫人），田间阡陌上的花开了，你可以一边赏花，一边慢慢地回来。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">“<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(0, 0, 0);\">陌上花开，如果没有悄然伫立阡陌并为陌上风情所陶醉的人，那么花开也寂寞，风情也苍白....</span>”喜欢这句话，是因为看了忍冬的作品《陌上花开缓缓归》</span></p><p style=\"line-height: 2em;\"><span style=\"color: rgb(0, 0, 0); font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><strong>内容</strong></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">阳春三月，风和日暖，信步城外，看阡陌之上的杨柳依依，野花绚烂，身心不由得轻爽而浪漫。“三月风情陌上花”，古远的诗句似乎随风从天边飘来，从历史的深处飘来，拂过阡陌，袭上心头，诗是属于清乾嘉诗人赵翼的，可昂首远望，眼前的陌上风情却是不折不扣的现代，由眼帘入心扉。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">漫步陌上，心情是诗意的那种，优雅而散淡，不惹匆促，只因陌上花开；花是自然的那种，朴素而恬淡，不落尘俗。“三月风情陌上花”，是花在其中生命得以璀璨，人在其中心情得以畅然的一种意境。三月陌上花，让人爱让人痴，恍惚人的骨子里头都沉淀了花的影子，花的风韵。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">陌上花开，如果没有了从俗累的生活中走出来，悄然伫立阡陌并为陌上风情所陶醉的人，那么花开也寂寞，风情也苍白。于是，一句“陌上花开，可缓缓归矣”不知被多少人吟诵了多少遍。人归缓缓，那花便有灵性，便开得执著，陌上风情也被撩拨得浓郁而热烈。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">那是春天里一幅最美妙的图画：在粉黛佳丽的簇拥下，一位美若天仙、仪态雍容的贵夫人款摆腰肢走在一千多年前的江南临安的阡陌上，其时陌上花团锦簇，杨柳轻摇，蝶飞蜂舞，三月风情旖旎之至。这时，一骑快马打陌头杨柳的绿阴中飘然而来，驿者翻身下马，气喘吁吁中把一封书信递给夫人。夫人展开一看，不禁满面春色。原来，吴越王钱镠身在王宫大殿却惦记着远在临安陌上的爱妃，嘱她只管怜花惜柳，消受春色，不必急着回归，“陌上花开，可缓缓归矣。”钱镠，这位在五代十国的夹缝中占了十二州江山的吴越国王，不提他江山坐得如何，只是这一番对爱妃的体贴，对春色的倾心之情，就足以让后人击掌了，缓缓归，缓缓归。多么柔情的一句话，游移在古籍史册中，艳称千古。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">只是再柔情，再体贴的话，也难以使国家逃脱倾覆的厄运，怜美惜春的柔情敌不了剑戟弓弩的无情。从此，陌上花开依旧，只是钱镠烟逝，爱妃云去，只有“陌上花开，可缓缓归矣”这一句话化作一个美丽的故事，游荡在临安的陌上，等待后人的凭吊。终于在吴越国“国除”的百十年后的一个秋天，诗人东坡来到了临安。历史似乎特意安排东坡在秋天踏上临安的陌上，陌上春天花开，秋天亦花开，只是春天的骨子里透的是柔情，而秋天的骨子里透的却是萧瑟。于是在秋天的陌上花开中，东坡怅对古人，一番凭吊，三首《陌上花》于胸中郁结，一吐为快。“陌上花开蝴蝶飞，江山犹是昔人非”，“若为留得堂堂去，且更从教缓缓归”……诗人一唱三叹中，浸染着人事盛衰的感慨。陌上花，就这样开在历史的车辙中，栉风沐雨，浸透艳丽与沧桑，令人唏嘘不已。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">漫步陌上，尽管不能如吴越王妃那样一路招摇地走在陌上花丛中，也不能像东坡那样怀一颗忧伤之心，吟出千古不泯的诗句，不过，这并不妨碍我把钱镠与王妃的“缓缓归”，当做人类面对大自然所共有的心境去感怀，当然，东坡透过陌上花开而生发的历史感悟更以一种强劲的力量震撼着我的心灵。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">我几乎要拜倒在陌上花的面前了。我突然觉得这一束束、一丛丛开了又落，落了又开的陌上花，简直就是为了人类的历史与文化而开落。我不敢说可以触摸历史与文化，但我可以觉悟地抚摸陌上娇嫩而以顽强的花朵。陌上花开缓缓归，这不仅意味着悠闲、诗意，而更大的意义在于，让我们的心灵在恬静的陌上花开中恬静如花，回归自然，回归人类的历史与文化。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">缓缓归，缓缓归，披一袭“三月风情”，再采一束“陌上花”，缓缓归。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">缓缓归矣，我心已是陌上花开。</span></p><p><br/></p>'),('8eb3a0b5cdfa45e3a1fdbfb2daf1fd4b','19b4a3307c6e488d92171bb25707f913',NULL,'2018-01-01 00:00:00',NULL,'2018-09-21 13:44:11',NULL,NULL,NULL,NULL,NULL,NULL,'<p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">四年的时间，学习专业课程，临近毕业恨不能找个简单轻松的工作远离编程，可是微薄的工资跟专业相比，找个专业的工作工资能高好几倍。好不容易找到个跟专业符合的工作，五年的时间，从一个水平进步到另一个水平，付出了很多的艰辛。感觉要不断得超越自己，不是件容易的事！</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">不知道自己以后还能不能继续干这一行，结婚不到一年，也许某天开始会离开一两年，当再回来工作的时候，不知道是否能有单位再愿意聘请我，或者说自己能否再胜任这工作，因为这计算机编程专业发展的速度也相当快...三天不学都会落后，更何况是一年甚至更久...</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><strong>附资料：女性职业发展道路的特点</strong></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">1.二个高峰和一个低谷。二个高峰，一个是在女性就业后的6－8年左右时间，即女性就业后但未生育前；另一个是在36岁以后的十余年间，此时孩子基本长大或可托人代管，自身精力仍充沛、阅历丰富，女性事业辉煌通常在此时期。一个低谷在这两个高峰之间，通常是生育和抚养孩子的8年时间。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">2.就业面窄，发展速度缓慢。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">3.婚姻状况对女性职业发展道路有决定性的影响。婚姻状况对女性职业发展影响较男性大得多。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><strong>职业生涯管理顾问：</strong></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">在暂时离开职场的时候将之视为“沉淀期”和“重新规划期”，这个时候可以给自己一个重新思考人生的机会，正如一句谚语所说的：“在冬季学会游泳，在夏季学会溜冰”；三是一定在暂时离开职场之前就通过努力的工作和思考，为自己的未来生涯发展有所准备和有一个清晰的规划，凡事预则立，不预则废。</span></p><p style=\"line-height: 2em;\"><img alt=\"女程序员职业生涯该如何发展\" src=\"/upload/20180921/1537508594653036394.jpg\" width=\"529\" height=\"347\"/></p><p><br/></p>'),('a9aab85931b74014bb217dce6beecda9','e6c4ecfe9976421993c410918c41f10c',NULL,'2018-01-01 00:00:00',NULL,'2018-09-21 12:42:33',NULL,NULL,NULL,NULL,NULL,NULL,'<p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">后台上传图片后，都有一个图片属性，会指定图片的宽和高，如果图片固定了宽度和高度，PC端用max-width可以控制最大宽度，高度自动缩放。但是手机端就没法自动缩放，可以使用js来改变图片的style，通过100%比例，当然也可以设置px固定的高度宽度。<br/>&nbsp;</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">html默认样式：<br/>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;news_infos&quot; <span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">id=&quot;newsp&quot;</span>&gt;<br/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;&lt;img src=&quot;images/v1.jpg&quot; style=&quot;<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">width:300px;height:100px</span>&quot;&gt;&lt;/p&gt;<br/>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">&nbsp;</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">CSS：<br/><br/>.news_infos img { max-width: 650px;height:auto; }</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">&nbsp;</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">js：<br/>&nbsp;&lt;script type=&quot;text/javascript&quot;&gt; &nbsp; &nbsp;<br/>&nbsp;&nbsp; &nbsp; &nbsp;var aImg=document.getElementById(&quot;<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">newsp</span>&quot;).getElementsByTagName(&#39;img&#39;);<br/>&nbsp; &nbsp; &nbsp;for(var i=0;i&lt;aImg.length;i++){<br/>&nbsp; &nbsp; &nbsp; aImg[i].style.height=&quot;<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">100%</span>&quot;;<br/>&nbsp; &nbsp; &nbsp; aImg[i].style.width=&quot;<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">100%</span>&quot;;<br/>&nbsp; &nbsp; &nbsp; }&nbsp;&nbsp; &nbsp; &nbsp;<br/>&nbsp; &lt;/script&gt; &nbsp;&nbsp;</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">&nbsp;</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">或者 方法二：<br/><br/>&nbsp;&lt;script type=&quot;text/javascript&quot;&gt; &nbsp; &nbsp;<br/>&nbsp;&nbsp; &nbsp; &nbsp;var aImg=document.getElementById(&quot;<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">newsp</span>&quot;).getElementsByTagName(&#39;img&#39;);<br/>&nbsp; &nbsp; &nbsp;for(var i=0;i&lt;aImg.length;i++){<br/>&nbsp; &nbsp; &nbsp; aImg[i].style.height=&quot;<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">auto</span>&quot;;<br/>&nbsp; &nbsp; &nbsp; aImg[i].style.width=&quot;<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">auto</span>&quot;;<br/>&nbsp; &nbsp; &nbsp; }&nbsp;&nbsp; &nbsp; &nbsp;<br/>&nbsp; &lt;/script&gt; &nbsp;<br/>&nbsp;</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">&nbsp;</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">html更改后：<br/>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=&quot;news_infos&quot; <span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">id=&quot;newsp&quot;</span>&gt;<br/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;&lt;img src=&quot;images/v1.jpg&quot; style=&quot;width:<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">100%</span>;height:<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\">100%&quot;</span>&gt;&lt;/p&gt;<br/>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</span></p><p><br/></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">100%这个方案不是很完美，如果图片上传的大小没有超过650，那么PC端图片会被放大。还有一种解决方案就是，编辑后台内容的时候，将图片属性后面的width，height值都删掉，让css来控制就行了。同样用max-width来控制图片大小，小图＜650px，图片不会被更改，＞650px，图片宽度就是650px。，那么手机端就用100%来表示。<br/>&nbsp;</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">方法三 CSS：<br/><br/>.news_infos img { max-width: 650px；height:auto; }<br/><br/>@media only screen and (max-width: 480px) {<br/>&nbsp; &nbsp; .news_infos img {<span style=\"font-family: 微软雅黑, Microsoft YaHei; font-size: 14px; color: rgb(255, 0, 0);\"> width：100%;</span>&nbsp;}<br/>}</span></p><p><br/></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">这个的不好的地方就在于，每次编辑图片属性，都得删除后面的width，比较繁琐。<br/><br/>以上方法，都可以实现，但是100%，和设置宽度这两种方法都不完美， 如果以前图多，已经固定了宽度，建议使用方法二<br/>&nbsp;</span></p>'),('b84e32e2951a4e15b168fef795045708','7e1dfd15e5764a19910490ee70cd4462',NULL,'2018-01-01 00:00:00',NULL,'2018-09-27 11:29:08',NULL,NULL,NULL,NULL,NULL,NULL,'<h2 id=\"blogTitle0\">引言</h2><p>在上一篇 <a href=\"http://www.panchengming.com/2017/12/16/pancm61/\">大数据学习系列之四 ----- Hadoop+Hive环境搭建图文详解(单机)</a> 和之前的<a href=\"http://www.panchengming.com/2017/12/09/pancm57/\">大数据学习系列之二 ----- HBase环境搭建(单机)</a> 中成功搭建了Hive和HBase的环境，并进行了相应的测试。本文主要讲的是如何将Hive和HBase进行整合。</p><h3 id=\"blogTitle1\">Hive和HBase的通信意图</h3><p>Hive与HBase整合的实现是利用两者本身对外的API接口互相通信来完成的，其具体工作交由Hive的lib目录中的hive-hbase-handler-*.jar工具类来实现，通信原理如下图所示。<br/><img src=\"http://img.blog.csdn.net/20171218181539512?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><h3 id=\"blogTitle2\">Hive整合HBase后的使用场景：</h3><p>（一）通过Hive把数据加载到HBase中，数据源可以是文件也可以是Hive中的表。<br/>（二）通过整合，让HBase支持JOIN、GROUP等SQL查询语法。<br/>（三）通过整合，不仅可完成HBase的数据实时查询，也可以使用Hive查询HBase中的数据完成复杂的数据分析。</p><h2 id=\"blogTitle3\">一、环境选择</h2><h3 id=\"blogTitle4\">1，服务器选择</h3><p>本地虚拟机<br/>操作系统:linux CentOS 7<br/>Cpu：2核<br/>内存：2G<br/>硬盘:40G</p><h3 id=\"blogTitle5\">2，配置选择</h3><p>JDK:1.8 （jdk-8u144-linux-x64.tar.gz）<br/>Hadoop:2.8.2 (hadoop-2.8.2.tar.gz)<br/>Hive： 2.1 (apache-hive-2.1.1-bin.tar.gz)<br/>HBase:1.6.2 (hbase-1.2.6-bin.tar.gz)</p><h3 id=\"blogTitle6\">3，下载地址</h3><p><strong>官网地址</strong><br/>JDK：<br/><a href=\"http://www.oracle.com/technetwork/java/javase/downloads\" class=\"uri\">http://www.oracle.com/technetwork/java/javase/downloads</a><br/>Hadopp:<br/><a href=\"http://www.apache.org/dyn/closer.cgi/hadoop/common\" class=\"uri\">http://www.apache.org/dyn/closer.cgi/hadoop/common</a><br/>Hive<br/><a href=\"http://mirror.bit.edu.cn/apache/hive/\" class=\"uri\">http://mirror.bit.edu.cn/apache/hive/</a><br/>HBase:<br/><a href=\"http://mirror.bit.edu.cn/apache/hbase/\" class=\"uri\">http://mirror.bit.edu.cn/apache/hbase/</a></p><p>百度云盘<br/>链接：<a href=\"https://pan.baidu.com/s/1jIemIDC\" class=\"uri\">https://pan.baidu.com/s/1jIemIDC</a> 密码：uycu</p><h2 id=\"blogTitle7\">二、服务器的相关配置</h2><p>在配置Hadoop+Hive+HBase之前，应该先做一下配置。<br/>做这些配置为了方便，使用root权限。</p><h3 id=\"blogTitle8\">1，更改主机名</h3><p>首先更改主机名，目的是为了方便管理。<br/>输入:</p><pre>hostname</pre><p>查看本机的名称<br/>然后更改主机名为master<br/>输入:</p><pre>hostnamectl&nbsp;set-hostname&nbsp;master</pre><p><strong>注:主机名称更改之后，要重启(reboot)才会生效。</strong></p><h3 id=\"blogTitle9\">2，做IP和主机名的映射</h3><p>修改hosts文件，做关系映射<br/>输入</p><pre>vim&nbsp;/etc/hosts</pre><p>添加<br/>主机的ip 和 主机名称</p><pre>192.168.238.128&nbsp;master</pre><h3 id=\"blogTitle10\">3，关闭防火墙</h3><p>关闭防火墙，方便访问。<br/><strong>CentOS 7版本以下输入:</strong><br/>关闭防火墙</p><pre>service&nbsp;&nbsp;&nbsp;iptables&nbsp;stop</pre><p><strong>CentOS 7 以上的版本输入：</strong></p><pre>systemctl&nbsp;stop&nbsp;firewalld.service</pre><h3 id=\"blogTitle11\">4，时间设置</h3><p>查看当前时间<br/>输入:</p><pre>date</pre><p>查看服务器时间是否一致，若不一致则更改<br/>更改时间命令</p><pre>date&nbsp;-s&nbsp;‘MMDDhhmmYYYY.ss’</pre><h3 id=\"blogTitle12\">5，整体的环境配置</h3><p>/etc/profile 的整体配置</p><pre>#Java&nbsp;Configexport&nbsp;JAVA_HOME=/opt/java/jdk1.8export&nbsp;JRE_HOME=/opt/java/jdk1.8/jreexport&nbsp;CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib#&nbsp;Scala&nbsp;Configexport&nbsp;SCALA_HOME=/opt/scala/scala-2.12.2#&nbsp;Spark&nbsp;Configexport&nbsp;&nbsp;SPARK_HOME=/opt/spark/spark1.6-hadoop2.4-hive#&nbsp;Zookeeper&nbsp;Configexport&nbsp;ZK_HOME=/opt/zookeeper/zookeeper3.4#&nbsp;HBase&nbsp;Configexport&nbsp;HBASE_HOME=/opt/hbase/hbase1.2#&nbsp;Hadoop&nbsp;Config&nbsp;export&nbsp;HADOOP_HOME=/opt/hadoop/hadoop2.8export&nbsp;HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/nativeexport&nbsp;HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib&quot;#&nbsp;Hive&nbsp;Configexport&nbsp;HIVE_HOME=/opt/hive/hive2.1export&nbsp;HIVE_CONF_DIR=${HIVE_HOME}/confexport&nbsp;PATH=.:${JAVA_HOME}/bin:${SCALA_HOME}/bin:${SPARK_HOME}/bin:${HADOOP_HOME}/bin:${HADOOP_HOME}/sbin:${ZK_HOME}/bin:${HBASE_HOME}/bin:${HIVE_HOME}/bin:$PATH</pre><p><img src=\"http://img.blog.csdn.net/20171218182335894?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p><strong>注:具体的配置以自己的为准，没有的不用配置。</strong></p><h2 id=\"blogTitle13\">三、Hadoop的环境配置</h2><p>Hadoop的具体配置在<a href=\"http://www.panchengming.com/2017/11/26/pancm55/\">大数据学习系列之一 ----- Hadoop环境搭建(单机)</a> 中介绍得很详细了。所以本文就大体介绍一下。<br/><strong>注:具体配置以自己的为准。</strong></p><h3 id=\"blogTitle14\">1，环境变量设置</h3><p>编辑 /etc/profile 文件 :</p><pre>vim&nbsp;/etc/profile</pre><p>配置文件:</p><pre>export&nbsp;HADOOP_HOME=/opt/hadoop/hadoop2.8export&nbsp;HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/nativeexport&nbsp;HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib&quot;export&nbsp;PATH=.:${JAVA_HOME}/bin:${HADOOP_HOME}/bin:$PATH</pre><h3 id=\"blogTitle15\">2，配置文件更改</h3><p>先切换到 /home/hadoop/hadoop2.8/etc/hadoop/ 目录下</p><h4 id=\"修改-core-site.xml\">3.2.1 修改 core-site.xml</h4><p>输入:</p><pre>vim&nbsp;core-site.xml</pre><p>在添加:</p><pre>&lt;configuration&gt;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;/root/hadoop/tmp&lt;/value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;Abase&nbsp;for&nbsp;other&nbsp;temporary&nbsp;directories.&lt;/description&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;/property&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;fs.default.name&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;hdfs://master:9000&lt;/value&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;/property&gt;&lt;/configuration&gt;</pre><h4 id=\"修改-hadoop-env.sh\">3.2.2修改 hadoop-env.sh</h4><p>输入:</p><pre>vim&nbsp;hadoop-env.sh</pre><p>将${JAVA_HOME} 修改为自己的JDK路径</p><pre>export&nbsp;&nbsp;&nbsp;JAVA_HOME=${JAVA_HOME}</pre><p>修改为：</p><pre>export&nbsp;&nbsp;&nbsp;JAVA_HOME=/home/java/jdk1.8</pre><h4 id=\"修改-hdfs-site.xml\">3.2.3修改 hdfs-site.xml</h4><p>输入:</p><pre>vim&nbsp;hdfs-site.xml</pre><p>在添加:</p><pre>&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;name&gt;dfs.name.dir&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;value&gt;/root/hadoop/dfs/name&lt;/value&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;description&gt;Path&nbsp;on&nbsp;the&nbsp;local&nbsp;filesystem&nbsp;where&nbsp;theNameNode&nbsp;stores&nbsp;the&nbsp;namespace&nbsp;and&nbsp;transactions&nbsp;logs&nbsp;persistently.&lt;/description&gt;&lt;/property&gt;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;name&gt;dfs.data.dir&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;value&gt;/root/hadoop/dfs/data&lt;/value&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;description&gt;Comma&nbsp;separated&nbsp;list&nbsp;of&nbsp;paths&nbsp;on&nbsp;the&nbsp;localfilesystem&nbsp;of&nbsp;a&nbsp;DataNode&nbsp;where&nbsp;it&nbsp;should&nbsp;store&nbsp;its&nbsp;blocks.&lt;/description&gt;&lt;/property&gt;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;name&gt;dfs.replication&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;value&gt;2&lt;/value&gt;&lt;/property&gt;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;dfs.permissions&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;false&lt;/value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;need&nbsp;not&nbsp;permissions&lt;/description&gt;&lt;/property&gt;</pre><h4 id=\"修改mapred-site.xml\">3.2.4 修改mapred-site.xml</h4><p>如果没有 mapred-site.xml 该文件，就复制mapred-site.xml.template文件并重命名为mapred-site.xml。<br/>输入:</p><pre>vim&nbsp;mapred-site.xml</pre><p>修改这个新建的mapred-site.xml文件，在节点内加入配置:</p><pre>&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;mapred.job.tracker&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;master:9001&lt;/value&gt;&lt;/property&gt;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;mapred.local.dir&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;/root/hadoop/var&lt;/value&gt;&lt;/property&gt;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;mapreduce.framework.name&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;yarn&lt;/value&gt;&lt;/property&gt;</pre><h3 id=\"blogTitle16\">3，Hadoop启动</h3><p>启动之前需要先格式化<br/>切换到/home/hadoop/hadoop2.8/bin目录下<br/>输入:</p><pre>./hadoop&nbsp;&nbsp;namenode&nbsp;&nbsp;-format</pre><p>格式化成功后，再切换到/home/hadoop/hadoop2.8/sbin目录下<br/>启动hdfs和yarn<br/>输入:</p><pre>start-dfs.shstart-yarn.sh</pre><p>启动成功后，输入jsp查看是否启动成功<br/>在浏览器输入 ip+8088 和ip +50070 界面查看是否能访问<br/>能正确访问则启动成功</p><h2 id=\"blogTitle17\">四、Hive的环境配置</h2><p>Hive环境的具体配置在我的这篇<a href=\"http://www.panchengming.com/2017/12/16/pancm61/\">大数据学习系列之四 ----- Hadoop+Hive环境搭建图文详解(单机)</a> 以及介绍得很详细了。本篇就大概介绍下。</p><h3 id=\"blogTitle18\">修改hive-site.xml</h3><p>切换到 /opt/hive/hive2.1/conf 目录下<br/>将hive-default.xml.template 拷贝一份，并重命名为hive-site.xml<br/>然后编辑hive-site.xml文件</p><pre>cp&nbsp;hive-default.xml.template&nbsp;hive-site.xmlvim&nbsp;hive-site.xml</pre><p>编辑hive-site.xml文件，在 &nbsp;中添加:</p><pre>&lt;!--&nbsp;指定HDFS中的hive仓库地址&nbsp;--&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&lt;property&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;/root/hive/warehouse&lt;/value&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&lt;/property&gt;&nbsp;&nbsp;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;hive.exec.scratchdir&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;/root/hive&lt;/value&gt;\r\n&nbsp;&nbsp;&lt;/property&gt;\r\n\r\n&nbsp;&nbsp;&lt;!--&nbsp;该属性为空表示嵌入模式或本地模式，否则为远程模式&nbsp;--&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&lt;property&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;hive.metastore.uris&lt;/name&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;&lt;/value&gt;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&lt;/property&gt;&nbsp;&nbsp;&lt;!--&nbsp;指定mysql的连接&nbsp;--&gt;\r\n&nbsp;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;jdbc:mysql://master:3306/hive?createDatabaseIfNotExist=true&lt;/value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/property&gt;&lt;!--&nbsp;指定驱动类&nbsp;--&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/property&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;指定用户名&nbsp;--&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;root&lt;/value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;指定密码&nbsp;--&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;value&gt;123456&lt;/value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/property&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;name&gt;hive.metastore.schema.verification&lt;/name&gt;\r\n&nbsp;&nbsp;&nbsp;&lt;value&gt;false&lt;/value&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/description&gt;\r\n&nbsp;&lt;/property&gt;</pre><p>然后将配置文件中所有的</p><pre>${system:java.io.tmpdir}</pre><p>更改为 /opt/hive/tmp (如果没有该文件则创建)，<br/>并将此文件夹赋予读写权限，将<br/><code>${system:user.name}</code><br/>更改为 root</p><p>例如:<br/>更改之前的:<br/><img src=\"http://img.blog.csdn.net/20171216092323706?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/><br/>更改之后:<br/><img src=\"http://img.blog.csdn.net/20171216092332426?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p>配置图:<br/><img src=\"http://img.blog.csdn.net/20171216092358071?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p><strong>注: 由于hive-site.xml 文件中的配置过多，可以通过FTP将它下载下来进行编辑。也可以直接配置自己所需的，其他的可以删除。 MySQL的连接地址中的master是主机的别名，可以换成ip。</strong></p><h3 id=\"blogTitle19\">修改 hive-env.sh</h3><p>修改hive-env.sh 文件，没有就复制 hive-env.sh.template ，并重命名为hive-env.sh</p><p>在这个配置文件中添加</p><pre>export&nbsp;&nbsp;HADOOP_HOME=/opt/hadoop/hadoop2.8export&nbsp;&nbsp;HIVE_CONF_DIR=/opt/hive/hive2.1/confexport&nbsp;&nbsp;HIVE_AUX_JARS_PATH=/opt/hive/hive2.1/lib</pre><h3 id=\"blogTitle20\">添加 数据驱动包</h3><p>由于Hive 默认自带的数据库是使用mysql，所以这块就是用mysql<br/>将mysql 的驱动包 上传到 /opt/hive/hive2.1/lib</p><h2 id=\"blogTitle21\">五、HBase的环境配置</h2><p>HBase环境的具体配置在我的这篇<a href=\"http://www.panchengming.com/2017/12/09/pancm57/\">大数据学习系列之二 ----- HBase环境搭建(单机)</a> 以及介绍得很详细了。本篇就大概介绍下。</p><h3 id=\"blogTitle22\">修改 hbase-env.sh</h3><p>编辑 hbase-env.sh 文件，添加以下配置</p><pre>export&nbsp;JAVA_HOME=/opt/java/jdk1.8export&nbsp;HADOOP_HOME=/opt/hadoop/hadoop2.8export&nbsp;HBASE_HOME=/opt/hbase/hbase1.2export&nbsp;HBASE_CLASSPATH=/opt/hadoop/hadoop2.8/etc/hadoopexport&nbsp;HBASE_PID_DIR=/root/hbase/pidsexport&nbsp;HBASE_MANAGES_ZK=false</pre><p>说明:配置的路径以自己的为准。HBASE_MANAGES_ZK=false 是不启用HBase自带的Zookeeper集群。</p><h3 id=\"blogTitle23\">修改 hbase-site.xml</h3><p>编辑hbase-site.xml 文件，在添加如下配置</p><pre>&lt;!--&nbsp;存储目录&nbsp;--&gt;&lt;property&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;name&gt;hbase.rootdir&lt;/name&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;value&gt;hdfs://test1:9000/hbase&lt;/value&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;description&gt;The&nbsp;directory&nbsp;shared&nbsp;byregion&nbsp;servers.&lt;/description&gt;&nbsp;&nbsp;&lt;/property&gt;&nbsp;&nbsp;&lt;!--&nbsp;hbase的端口&nbsp;--&gt;&lt;property&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;name&gt;hbase.zookeeper.property.clientPort&lt;/name&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;value&gt;2181&lt;/value&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;description&gt;Property&nbsp;from&nbsp;ZooKeeper&#39;sconfig&nbsp;zoo.cfg.&nbsp;The&nbsp;port&nbsp;at&nbsp;which&nbsp;the&nbsp;clients&nbsp;will&nbsp;connect.&nbsp;&nbsp;\r\n&nbsp;&lt;/description&gt;&nbsp;&nbsp;&lt;/property&gt;&nbsp;&nbsp;&lt;!--&nbsp;&nbsp;超时时间&nbsp;--&gt;&lt;property&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;name&gt;zookeeper.session.timeout&lt;/name&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;value&gt;120000&lt;/value&gt;&nbsp;&nbsp;&lt;/property&gt;&nbsp;&nbsp;&lt;!--&nbsp;&nbsp;zookeeper&nbsp;集群配置。如果是集群，则添加其它的主机地址&nbsp;--&gt;&lt;property&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;name&gt;hbase.zookeeper.quorum&lt;/name&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;value&gt;test1&lt;/value&gt;&nbsp;&nbsp;&lt;/property&gt;&nbsp;&nbsp;&lt;property&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;name&gt;hbase.tmp.dir&lt;/name&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;value&gt;/root/hbase/tmp&lt;/value&gt;&nbsp;&nbsp;&lt;/property&gt;&nbsp;&nbsp;&lt;!--&nbsp;false是单机模式，true是分布式模式&nbsp;&nbsp;--&gt;&lt;property&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;name&gt;hbase.cluster.distributed&lt;/name&gt;&nbsp;&nbsp;\r\n&nbsp;&lt;value&gt;false&lt;/value&gt;&nbsp;&nbsp;&lt;/property&gt;</pre><p>说明:hbase.rootdir：这个目录是region server的共享目录，用来持久化Hbase \r\n。hbase.cluster.distributed \r\n：Hbase的运行模式。false是单机模式，true是分布式模式。若为false,Hbase和Zookeeper会运行在同一个JVM里面。</p><h2 id=\"blogTitle24\">六、Hive整合HBase的环境配置以及测试</h2><h3 id=\"blogTitle25\">1，环境配置</h3><p>因为Hive与HBase整合的实现是利用两者本身对外的API接口互相通信来完成的，其具体工作交由Hive的lib目录中的hive-hbase-handler-<em>.jar工具类来实现。所以只需要将hive的 hive-hbase-handler-</em>.jar 复制到hbase/lib中就可以了。<br/>切换到hive/lib目录下<br/>输入:</p><pre>cp&nbsp;hive-hbase-handler-*.jar&nbsp;/opt/hbase/hbase1.2/lib</pre><p><img src=\"http://img.blog.csdn.net/20171218183724094?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/><br/>注: 如果在hive整合hbase中，出现版本之类的问题，那么以hbase的版本为主，将hbase中的jar包覆盖hive的jar包。</p><h3 id=\"blogTitle26\">2，hive和hbase测试</h3><p>在进行测试的时候，确保hadoop、hbase、hive环境已经成功搭建好，并且都成功启动了。<br/>打开xshell的两个命令窗口<br/>一个进入hive，一个进入hbase</p><h4 id=\"在hive中创建映射hbase的表\">6.2.1在hive中创建映射hbase的表</h4><p>在hive中创建一个映射hbase的表，为了方便，设置两边的表名都为t_student，存储的表也是这个。<br/>在hive中输入:</p><pre>create&nbsp;table&nbsp;t_student(id&nbsp;int,name&nbsp;string)&nbsp;stored&nbsp;by&nbsp;&#39;org.apache.hadoop.hive.hbase.HBaseStorageHandler&#39;&nbsp;with&nbsp;serdeproperties(&quot;hbase.columns.mapping&quot;=&quot;:key,st1:name&quot;)&nbsp;tblproperties(&quot;hbase.table.name&quot;=&quot;t_student&quot;,&quot;hbase.mapred.output.outputtable&quot;&nbsp;=&nbsp;&quot;t_student&quot;);</pre><p><strong>说明：第一个t_student 是hive表中的名称，第二个t_student是定义在hbase的table名称 \r\n，第三个t_student 是存储数据表的名称(&quot;hbase.mapred.output.outputtable&quot; = \r\n&quot;t_student&quot;这个可以不要，表数据就存储在第二个表中了) 。<br/>(id int,name string) 这个是hive表结构。如果要增加字段，就以这种格式增加。如果要增加字段的注释，那么在字段后面添加comment ‘你要描述的’。<br/>例如:<br/>create table t_student(id int comment ‘StudentId’,name string comment ‘StudentName’)<br/>org.apache.hadoop.hive.hbase.HBaseStorageHandler 这个是指定的存储器。<br/>hbase.columns.mapping 是定义在hbase的列族。<br/>例如:st1就是列族，name就是列。在hive中创建表t_student，这个表包括两个字段（int型的id和string型的name）。 \r\n映射为hbase中的表t_student，key对应hbase的rowkey，value对应hbase的st1:name列。</strong></p><p>表成功创建之后<br/>在hive、hbase分别中查看表和表结构<br/>hive中输入</p><pre>show&nbsp;tables；describe&nbsp;t_student;</pre><p>hbase输入:</p><pre>listdescribe&nbsp;‘t_student’</pre><p><img src=\"http://img.blog.csdn.net/20171218183832950?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p><img src=\"http://img.blog.csdn.net/20171218183855444?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/><br/>可以看到表已经成功的创建了</p><h4 id=\"数据同步测试\">6.2.2数据同步测试</h4><p>进入hbase之后<br/>在t_student中添加两条数据 然后查询该表</p><pre>put&nbsp;&#39;t_student&#39;,&#39;1001&#39;,&#39;st1:name&#39;,&#39;zhangsan&#39;put&nbsp;&#39;t_student&#39;,&#39;1002&#39;,&#39;st1:name&#39;,&#39;lisi&#39;scan&nbsp;&#39;t_student&#39;</pre><p><img src=\"http://img.blog.csdn.net/20171218183918611?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p>然后切换到hive中<br/>查询该表<br/>输入:</p><pre>select&nbsp;*&nbsp;from&nbsp;t_student;</pre><p><img src=\"http://img.blog.csdn.net/20171218183931544?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p>然后在hive中删除该表<br/><strong>注:因为做测试要看结果，所以将表删除了。如果同学们要做测试的话，是没有必要删除该表的，因为在后面还会使用该表。</strong></p><p>然后查看hive和hbase中的表是否删除了<br/>输入:</p><pre>drop&nbsp;table&nbsp;t_student;</pre><p><img src=\"http://img.blog.csdn.net/20171218184133272?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p><img src=\"http://img.blog.csdn.net/20171218184155642?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/><br/>通过这些可以看到hive和hbase之间的数据成功同步！</p><h4 id=\"关联查询测试\">6.2.3关联查询测试</h4><h5 id=\"hive外部表测试\">hive外部表测试</h5><p>先在hbase中建一张t_student_info表，添加两个列族<br/>然后查看表结构<br/>输入:</p><pre>create&nbsp;&#39;t_student_info&#39;,&#39;st1&#39;,&#39;st2&#39;describe&nbsp;&#39;t_student_info&#39;</pre><p><img src=\"http://img.blog.csdn.net/20171218184225337?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p>然后在hive中创建外部表<br/><strong>说明:创建外部表要使用EXTERNAL 关键字</strong><br/>输入:</p><pre>create&nbsp;external&nbsp;table&nbsp;t_student_info(id&nbsp;int,age&nbsp;int,sex&nbsp;string)&nbsp;stored&nbsp;by&nbsp;&#39;org.apache.hadoop.hive.hbase.HBaseStorageHandler&#39;&nbsp;with&nbsp;serdeproperties(&quot;hbase.columns.mapping&quot;=&quot;:key,st1:age,st2:sex&quot;)&nbsp;tblproperties(&quot;hbase.table.name&quot;=&quot;t_student_info&quot;);</pre><p><img src=\"http://img.blog.csdn.net/20171218184240901?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p>然后在t_student_info 中添加数据</p><pre>put&nbsp;&#39;t_student_info&#39;,&#39;1001&#39;,&#39;st2:sex&#39;,&#39;man&#39;put&nbsp;&#39;t_student_info&#39;,&#39;1001&#39;,&#39;st1:age&#39;,&#39;20&#39;put&nbsp;&#39;t_student_info&#39;,&#39;1002&#39;,&#39;st1:age&#39;,&#39;18&#39;put&nbsp;&#39;t_student_info&#39;,&#39;1002&#39;,&#39;st2:sex&#39;,&#39;woman&#39;</pre><p><img src=\"http://img.blog.csdn.net/20171218184434573?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p>然后在hive中查询该表<br/>输入:</p><pre>select&nbsp;*&nbsp;from&nbsp;t_student_info;</pre><p><img src=\"http://img.blog.csdn.net/20171218184443608?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/></p><p>查询到数据之后，然后将t_student 和t_student_info进行关联查询。<br/>输入:</p><pre>select&nbsp;*&nbsp;from&nbsp;t_student&nbsp;t&nbsp;join&nbsp;t_student&nbsp;ti&nbsp;where&nbsp;t.id=ti.id&nbsp;;</pre><p><img src=\"http://img.blog.csdn.net/20171218184454815?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcWF6d3N4cGNt/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"/><br/><strong>说明:通过关联查询，可以得出表之间是可以关联查询的。但是明显看到hive 使用默认的mapreduce 作为引擎是多么的慢。。。</strong></p><p><br/></p>'),('d716f9fe41304848b7905af00af24618','df9c9b4f4be74e159001275c79636923',NULL,'2018-01-01 00:00:00',NULL,'2018-09-21 13:41:52',NULL,NULL,NULL,NULL,NULL,NULL,'<p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><span style=\"font-size: 14px; color: rgb(255, 0, 0);\"><strong>傻&nbsp; &nbsp;&nbsp;</strong></span><br/><br/>小时候，大概3岁吧，这时候不记事儿，但大人老说这事儿，脑子里就总是那些场景，感觉记忆犹新。什么事儿呢，就是我把奶奶家的奶粉拿回自己家喝，让我妈给我兑，结果他们说我这是“偷”，为了挨打轻一些，问我哪里来的，我瞎说了一个说那个谁家的，结果，打得更凶。最后事情还原了真相，我妈说，你要说说奶奶家的，都不会打你了。从此以后，我知道撒谎是会付出更惨痛的代价的，我不再撒谎，也不喜欢爱撒谎的人。<br/><br/><span style=\"font-size: 14px; color: rgb(255, 0, 0);\"><strong>很傻很要强 &nbsp;</strong>&nbsp;</span><br/><br/>我从小到大被大人骂的次数很少，脸皮薄，所以当一受到批评，就玻璃心，哭鼻子。记得我初中写作文，没有话题可写，于是我照搬了一篇作文，恰巧这篇作文被老师看到过，于是，我被全班通报批评。颜面扫地，哭鼻子也没有用。后来，为了扳回这点儿面子，我在学校订的报纸杂志投稿，一篇又一篇，功夫不负有心人，总算是被发表了，看着我写的诗歌被发表在报纸上，还被抄写在校栏黑板报上，大家投来羡慕的眼光，我知道光环说是给原创的，自己创作的文章，必须是自己的，不能抄袭别人的。<br/><br/><span style=\"font-size: 14px; color: rgb(255, 0, 0);\"><strong>好人 </strong>&nbsp;</span><br/><br/>我知道“滴水之恩当涌泉相报”，曾经我遇到过这么一件事，发生在我和同学实习期工作的时候，那天用完午餐，午休时间，我俩趴在桌上睡着了，结果那天中午包被人偷走了，里面刚好有一个刚用一大半奖学金买的MP4，还有银行卡。明明桌上有两个手机，竟然还给我留了一个棒棒机。这也是个善良的小偷啊。当时报了警，做了笔录。但警察不给看监控。无奈，我用棒棒机联系了就在附近的一个朋友，我告诉他我需要钱，一星期后再给他。他问都没问原因，跑去找他的战友借了500给我。就通过这一件事，对我而言，他的恩情，我铭记在心。所以，在此之后每当他找我帮忙的时候，我都记得他在我最困难最需要帮助的时候帮过我。后来也是因为他找我次数多了，朋友的提醒，我才打算放下脸来问他要。再后来…这个恩情我想我已经还完了，好人，我绝对的好人，就好比群里公告写了不要发广告，偏偏有人发，我都以警告处理，也有人青姐青姐的叫着，说好发工资给模板钱，结果两个月过去了，最后不联系了，我是好人，不点名，不拉黑。<br/><br/><span style=\"font-size: 14px; color: rgb(255, 0, 0);\"><strong>踏实&nbsp;</strong></span><br/><br/>读书时期，学习成绩算不上好，但偶尔能上上排名榜，踏实的学习能获得部分的奖学金，能学到一门技能。步入社会后踏实的工作，把自己工作岗位上的事情做好，其实我每次辞职的时候都很扎心，经理待人很好，有时候还能在上下班路上蹭蹭车，同事也不错，但是很遗憾，现在没有在一起共事，我记得他们说一直想找“第二个我”，时隔这么多年，一直没找到合适的人来替代我的岗位，所以，十年来，我们一直都有业务上的合作关系。没有一个有后台的爹，家里没有遇上拆迁，那就踏实的学习，踏实的工作，踏实的做人。<br/><br/><span style=\"font-size: 14px; color: rgb(255, 0, 0);\"><strong>安静</strong></span><br/><br/>我性格属于好静的，喜欢写写画画，自从读了计算机专业，那就更好静了，我可以两星期都不出门，但是半刻钟也不能离开电脑。我也喜欢玩游戏，看电视剧，电影，但是当我看到别人photoshop技术提高了，会html5，php了，我也静不下来了，他们都在进步，自己也应该进步，所以我给自己的博客栏目取了个“学无止境”就是想告诉自己，学习，不停的学习，大家都在努力，自己为何要堕落，成迷游戏，泡沫电视剧。<br/><br/>这就是我对自己的评价，不知道你眼中的我，是什么样的人？</span></p>'),('ecc7b6025f29406daa40abe82725aa75','21b6b14edd7c48dabf24221d739ad1dd',NULL,'2018-01-01 00:00:00',NULL,'2018-09-21 13:46:44',NULL,NULL,NULL,NULL,NULL,NULL,'<p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">有一个年轻人去买碗，来到店里他顺手拿起一只碗，然后依次与其它碗轻轻碰击，碗与碗之间相碰时立即发出沉闷、浑浊的声响，他失望地摇摇头。\r\n 然后去试下一只碗……他几乎挑遍了店里所有的碗，竟然没有一只满意的，就连老板捧出的自认为是店里碗中精品也被他摇着头失望地放回去了。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">老板很是纳闷，问他老是拿手中的这只碗去碰别的碗是什么意思？他得意地告诉老板，这是一位长者告诉他的挑碗的诀窍，当一只碗与另一只碗轻轻碰撞时，发出清脆、悦耳声响的，一定是只好碗。老板恍然大悟，拿起一只碗递给他，笑着说：“小伙子，你拿这只碗去试试，保管你能挑中自己心仪的碗”。</span></p><p style=\"line-height: 2em;\"><img src=\"/upload/20180921/1537508712928067178.png\" alt=\"每人的生命里都有一只碗\" width=\"585\" height=\"480\"/></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">他半信半疑地依言行事。奇怪！他手里拿着的每一只碗都在轻轻地碰撞下发出清脆的声响，他不明白这是怎么回事，惊问其详。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">老板笑着说，道理很简单，你刚才拿来试碗的那只碗本身就是一只次品，你用它试碗那声音必然浑浊，你想得到一只好碗，首先要保证自己拿的那只也是只好碗……</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">就像一只碗与另一只碗的碰撞一样，一颗心与另一颗心的碰撞，需要付出真诚，才能发出清脆悦耳的响声。自己带着猜忌、怀疑甚至戒备之心与人相处，就难免得到别人的猜忌与怀疑。其实每个人都可能成为自己生命中的“贵人”，前提条件是，你应该与人为善。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">你付出了真诚，就会得到相应的信任，你献出爱心，就会得到尊重。反之，你对别人虚伪、猜忌甚至嫉恨，别人给你的也只能是一堵厚厚的墙和一颗冷漠的心。每个人的生命里都有一只碗，碗里盛着善良、信任、宽容、真诚，也盛着虚伪、狭隘、猜忌、自私……请剔除碗里的杂质，然后微笑着迎接另一只碗的碰撞，并发出你们清脆、爽朗的笑声吧！</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">做最好的自己，才能碰见最好的别人。</span></p><p><br/></p>');

/*Table structure for table `system_category` */

DROP TABLE IF EXISTS `system_category`;

CREATE TABLE `system_category` (
  `id` varchar(32) NOT NULL,
  `cnname` varchar(128) NOT NULL COMMENT '栏目名称',
  `enname` varchar(64) DEFAULT NULL COMMENT '栏目英文名称',
  `code` varchar(32) DEFAULT NULL COMMENT '编码',
  `cat_seq` varchar(128) DEFAULT NULL COMMENT '层级关系',
  `form_id` varchar(32) NOT NULL COMMENT '表单ID',
  `image_path` varchar(128) DEFAULT NULL COMMENT '栏目图片',
  `description` varchar(128) DEFAULT NULL COMMENT '栏目描述',
  `link_target` varchar(8) DEFAULT NULL COMMENT '链接目标',
  `page_size` int(11) DEFAULT '20' COMMENT '分页数量',
  `cat_model` int(11) DEFAULT '20' COMMENT '栏目模型（1封面，2列表，3外部链接）',
  `visit_url` varchar(128) DEFAULT NULL COMMENT '访问路径',
  `cover_temp` varchar(128) DEFAULT NULL COMMENT '封面模版',
  `list_temp` varchar(128) DEFAULT NULL COMMENT '列表模版',
  `article_temp` varchar(32) DEFAULT NULL COMMENT '内容页模版',
  `link_url` varchar(128) DEFAULT NULL COMMENT '链接路径',
  `default_editor` varchar(10) NOT NULL COMMENT '默认编辑器',
  `md_content` text COMMENT 'md内容',
  `html_content` text COMMENT 'html内容',
  `parent_id` varchar(128) NOT NULL COMMENT '上级栏目',
  `is_show` int(11) DEFAULT '1' COMMENT '是否显示1显示0隐藏',
  `level` varchar(10) DEFAULT NULL COMMENT '栏目级别',
  `sort` int(11) DEFAULT '50' COMMENT '排序',
  `create_by` varchar(32) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(32) DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ext01` varchar(32) DEFAULT NULL,
  `ext02` varchar(32) DEFAULT NULL,
  `ext03` varchar(32) DEFAULT NULL,
  `ext04` varchar(32) DEFAULT NULL,
  `ext05` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_category` */

insert  into `system_category`(`id`,`cnname`,`enname`,`code`,`cat_seq`,`form_id`,`image_path`,`description`,`link_target`,`page_size`,`cat_model`,`visit_url`,`cover_temp`,`list_temp`,`article_temp`,`link_url`,`default_editor`,`md_content`,`html_content`,`parent_id`,`is_show`,`level`,`sort`,`create_by`,`create_time`,`update_by`,`update_time`,`ext01`,`ext02`,`ext03`,`ext04`,`ext05`) values ('28610874419a4787841c80a0840dbee3','关于我们','about','32Y607L3','.32Y607L3','c17ddcad9fb149a6bf90f7bba0e0696b','20190719\\a30017231bce447aba365e1c4b4e565d.jpg','女子向南瞧 此生就此别过了 难以忘怀 愿你三冬暖 愿你春不寒 愿你天黑有灯 下雨有伞 愿你善其身 愿你遇','1',20,1,'/about','/about.html','','','','ue','','<p style=\"line-height: 2em;\"><span style=\"font-family: 微软雅黑, Microsoft YaHei;\"><span style=\"font-size: 14px;\">杨青，女，一个80后草根女站长！09年入行。一直潜心研究web前端技术，一边工作一边积累经验，分享一些个人博客模板，以及SEO优化等心得。我入行早，大家也亲切的叫我“青姐”。<br/>SEO奋斗了将近两年时间，个人博客网站百度排名也从之前的30页后，排到了第一页。期间有很多的不容易，但是都没有放弃过。入了这一行，就深深的喜欢上它。我喜欢一句话“冥冥中该来则来，无处可逃”。<br/>近几年我也发现个人博客排前几页的也有很多是我做过的模板，感谢各位站长的欣赏，我仔细看过他们的网站。他们在我原模板的基础上有修改，而且他们做的原创内容都是值得一读的。有时候甚至排名都超过了我个人博客网站的排名。<br/>现在很多人向我请教如何做好SEO，我想说的是，一是“代码”，一定要简单，布局要合理。二是“内容”，一定要有原创，伪原创也是可以的。三是“持续”，这是一个持续性过程，一定要有耐心，SEO不是马上生效的。<br/>自从入了这一行，也交到了不少朋友，QQ群也不断的壮大起来，280998807(交流群 <span style=\"color: rgb(255, 0, 0);\">已满员</span>)&nbsp;\r\n \r\n280998843（技术群），群里的小伙伴们也很积极的帮助新朋友解决问题，如果你想加入我们，这个大家庭的门，永远给你敞开！另外微信群已于2018.4.13日开通（已满100，只接受群主邀请，可加我个人微信进群\r\n 。我的个人微信号 yangqq_1987）</span><br/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p><h2 style=\"line-height: 2em;\"><span style=\"font-family: 微软雅黑, Microsoft YaHei;\">About my blog</span></h2><p style=\"line-height: 2em;\"><span style=\"font-family: 微软雅黑, Microsoft YaHei;\">&nbsp;</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">域 名：www.yangqq.com 创建于2011年01月12日 <br/></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">服务器：阿里云服务器&nbsp;&nbsp;</span><a href=\"https://promotion.aliyun.com/ntms/act/ambassador/sharetouser.html?userCode=8smrzoqa&productCode=vm\" target=\"_blank\" style=\"text-decoration: underline; color: rgb(255, 0, 0); font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><span style=\"color: rgb(255, 0, 0); font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><strong>前往阿里云官网购买&gt;&gt;</strong></span></a></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">备案号：蜀ICP备11002373号-1</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">程 序：PHP 帝国CMS7.5</span></p><p><br/></p>','-1',1,'1',1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-28 12:01:06','9f4b807db2e94670bb02cdc212ea7389','2019-07-19 17:29:33','','','','',''),('599a0ac8eb3a46029d11a8a9f4afcea2','留言','gbook','4206HYWQ','.4206HYWQ','c17ddcad9fb149a6bf90f7bba0e0696b','','','1',20,1,'/gbook','/gbook.html','','','','md','','','-1',1,'1',5,'9f4b807db2e94670bb02cdc212ea7389','2018-09-28 12:04:04',NULL,'2018-09-28 14:17:22','','','','',''),('91ac3c6983ce4e91a2a1babc532a104a','学无止境','course','43AQW5IL','.43AQW5IL','c17ddcad9fb149a6bf90f7bba0e0696b','','','1',20,2,'/course','','/course.html','/article.html','','md','','','-1',1,'1',3,'9f4b807db2e94670bb02cdc212ea7389','2018-09-28 12:03:05','9f4b807db2e94670bb02cdc212ea7389','2018-09-28 16:42:51','','','','',''),('ae52186ba27f40acb4142fdf04cbff7c','技术分享','share','DXJWZ8MN','.DXJWZ8MN','c17ddcad9fb149a6bf90f7bba0e0696b','','','1',20,2,'/share','','/share.html','/article.html','','md','','','-1',1,'1',2,'9f4b807db2e94670bb02cdc212ea7389','2018-09-28 12:02:13','9f4b807db2e94670bb02cdc212ea7389','2018-09-28 14:24:38','','','','',''),('ba73bdf892b54685950857387fc4f5f2','Java技术','java','R5UX6BN3','.43AQW5IL.R5UX6BN3','c17ddcad9fb149a6bf90f7bba0e0696b','','','1',20,2,'/course','','/course.html','/article.html','','md','','','91ac3c6983ce4e91a2a1babc532a104a',1,'2',50,'9f4b807db2e94670bb02cdc212ea7389','2018-09-28 16:47:34','9f4b807db2e94670bb02cdc212ea7389','2018-09-28 16:47:49','','','','',''),('e153c78da6b647d2a6a78196481374d8','友情链接','','6N88T7FC','.6N88T7FC','02c73a0271644e8c91cf2400d9325e93','','','1',20,2,'','','','','','md','','','-1',0,'1',50,'9f4b807db2e94670bb02cdc212ea7389','2018-09-28 14:41:32',NULL,'2018-09-28 14:41:31','','','','',''),('ecd94a1a7c274b489fc6496aa7b62f2d','商品管理','shop','082R35CN','.082R35CN','e94afaed069b4d28844e4d795386e656','','','1',20,1,'','','','','','md','','','-1',1,'1',50,'9f4b807db2e94670bb02cdc212ea7389','2019-03-12 16:19:29',NULL,'2019-03-12 16:19:29','','','','',''),('f84f7546434442e48113fb690bcc6889','慢生活','life','PL28D01I','.PL28D01I','c17ddcad9fb149a6bf90f7bba0e0696b','','','1',20,1,'/life','/life.html','/life.html','/article.html','','md','##fdsafdsafdsa','<h2 id=\"h2-fdsafdsafdsa\"><a name=\"fdsafdsafdsa\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>fdsafdsafdsa</h2>','-1',1,'1',4,'9f4b807db2e94670bb02cdc212ea7389','2018-09-28 12:03:34','9f4b807db2e94670bb02cdc212ea7389','2018-09-28 14:49:58','','','','','');

/*Table structure for table `system_fields` */

DROP TABLE IF EXISTS `system_fields`;

CREATE TABLE `system_fields` (
  `id` varchar(32) NOT NULL,
  `form_id` varchar(32) NOT NULL,
  `field_text` varchar(32) DEFAULT NULL COMMENT '字段提示名',
  `field_name` varchar(128) NOT NULL COMMENT '字段名',
  `type` int(11) DEFAULT '1' COMMENT '类型：0系统自动生成表单字段',
  `data_type` varchar(32) DEFAULT NULL COMMENT '数据类型',
  `default_value` varchar(128) DEFAULT NULL COMMENT '默认值',
  `max_length` int(11) DEFAULT NULL COMMENT '最大长度',
  `create_by` varchar(32) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(32) DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ext01` varchar(32) DEFAULT NULL,
  `ext02` varchar(32) DEFAULT NULL,
  `ext03` varchar(32) DEFAULT NULL,
  `ext04` varchar(32) DEFAULT NULL,
  `ext05` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_fields` */

insert  into `system_fields`(`id`,`form_id`,`field_text`,`field_name`,`type`,`data_type`,`default_value`,`max_length`,`create_by`,`create_time`,`update_by`,`update_time`,`ext01`,`ext02`,`ext03`,`ext04`,`ext05`) values ('01a3d20d81f24d678d50238fcd5892ca','c17ddcad9fb149a6bf90f7bba0e0696b','文章内容','content',1,'html','',200,'9f4b807db2e94670bb02cdc212ea7389','2018-09-21 11:51:24',NULL,'2018-09-21 11:51:24',NULL,NULL,NULL,NULL,NULL),('9c1f06caf2454241b241092cca892403','e94afaed069b4d28844e4d795386e656','商品价格','shopprice',1,'varchar','',200,'9f4b807db2e94670bb02cdc212ea7389','2019-03-12 16:19:00',NULL,'2019-03-12 16:19:00',NULL,NULL,NULL,NULL,NULL),('a2b7dcd22d1042ef929e2d17c97e747c','02c73a0271644e8c91cf2400d9325e93','链接地址','link_url',1,'varchar','',256,'9f4b807db2e94670bb02cdc212ea7389','2018-09-25 14:33:17',NULL,'2018-09-25 14:33:16',NULL,NULL,NULL,NULL,NULL),('ba07f113393d4a6eb2c9d5fc55add1eb','e94afaed069b4d28844e4d795386e656','商品描述','shopdesc',1,'textarea','',200,'9f4b807db2e94670bb02cdc212ea7389','2019-03-12 16:18:19',NULL,'2019-03-12 16:18:19',NULL,NULL,NULL,NULL,NULL);

/*Table structure for table `system_forms` */

DROP TABLE IF EXISTS `system_forms`;

CREATE TABLE `system_forms` (
  `id` varchar(32) NOT NULL,
  `form_name` varchar(32) DEFAULT NULL COMMENT '表单名',
  `table_name` varchar(128) NOT NULL COMMENT '表名',
  `code` varchar(32) DEFAULT NULL COMMENT '编码系统自动生成',
  `type` int(11) DEFAULT '1' COMMENT '类型：0系统模型，1自定义模型',
  `create_by` varchar(32) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(32) DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ext01` varchar(32) DEFAULT NULL,
  `ext02` varchar(32) DEFAULT NULL,
  `ext03` varchar(32) DEFAULT NULL,
  `ext04` varchar(32) DEFAULT NULL,
  `ext05` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_forms` */

insert  into `system_forms`(`id`,`form_name`,`table_name`,`code`,`type`,`create_by`,`create_time`,`update_by`,`update_time`,`ext01`,`ext02`,`ext03`,`ext04`,`ext05`) values ('02c73a0271644e8c91cf2400d9325e93','友情链接','links','80AZ783M',1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-25 14:30:02',NULL,'2018-09-25 14:30:01',NULL,NULL,NULL,NULL,NULL),('c17ddcad9fb149a6bf90f7bba0e0696b','普通文章','article','V1WL66A0',0,'9f4b807db2e94670bb02cdc212ea7389','2018-09-12 09:59:38',NULL,'2018-09-12 10:26:00','selected',NULL,NULL,NULL,NULL),('e94afaed069b4d28844e4d795386e656','商品管理','products','48J8S3BA',1,'9f4b807db2e94670bb02cdc212ea7389','2019-03-12 16:17:56',NULL,'2019-03-12 16:17:56',NULL,NULL,NULL,NULL,NULL);

/*Table structure for table `system_labels` */

DROP TABLE IF EXISTS `system_labels`;

CREATE TABLE `system_labels` (
  `id` varchar(32) NOT NULL,
  `tag_name` varchar(128) NOT NULL COMMENT '标签名称',
  `pinyin` varchar(256) DEFAULT NULL COMMENT '拼音',
  `first_char` varchar(2) DEFAULT NULL COMMENT '首字母',
  `tag_count` varchar(64) NOT NULL COMMENT '标签使用次数',
  `create_by` varchar(32) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(32) DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_labels` */

insert  into `system_labels`(`id`,`tag_name`,`pinyin`,`first_char`,`tag_count`,`create_by`,`create_time`,`update_by`,`update_time`) values ('241d2e14a9764795acc29ff6b4ef0a4a','hbase','hbase','h','1',NULL,'2018-09-27 11:29:08',NULL,'2018-09-27 11:29:08'),('27ee21fd44ee4b3996d2546e700ca68a','css','css','c','1',NULL,'2018-09-21 12:47:09',NULL,'2018-09-21 12:47:09'),('2df0b5c5dc474fc38969ce4fab5b1ee7','花开','huakai','h','1',NULL,'2018-09-21 13:40:16',NULL,'2018-09-21 13:40:15'),('30b42859b3b2400396b123947fb4f5b4','单例','danli','d','1',NULL,'2018-09-27 10:54:28',NULL,'2018-09-27 10:54:28'),('3459b5788ec04732b336c484db6c8806','大数据','dashuju','d','1',NULL,'2018-09-27 11:29:08',NULL,'2018-09-27 11:29:08'),('3808d4ebd78a4861bc49cf3d653000aa','职业发展','zhiyefazhan','z','1',NULL,'2018-09-21 13:44:36',NULL,'2018-09-21 13:44:35'),('5b471f24146144899e5227a5dc4eaadd','原型','yuanxing','y','1',NULL,'2018-09-27 11:19:00',NULL,'2018-09-27 11:18:59'),('96f315f72dfa498e8e65afe85a22775e','hive','hive','h','1',NULL,'2018-09-27 11:29:08',NULL,'2018-09-27 11:29:08'),('a49146f9af0b43a592998f6072af08bf','html','html','h','1',NULL,'2018-09-21 12:47:09',NULL,'2018-09-21 12:47:08'),('a96f5f9c526d447cbee797b2536af1b3','要强','yaoqiang','y','1',NULL,'2018-09-21 13:42:05',NULL,'2018-09-21 13:42:04'),('a9d47da353be4e10aac3e1e23338862a','js','js','j','1',NULL,'2018-09-21 12:47:09',NULL,'2018-09-21 12:47:08'),('cd6cd19104ab4bdf86bad96c0c9ac0cf','factory','factory','f','1',NULL,'2018-09-27 11:16:22',NULL,'2018-09-27 11:16:21'),('d51ddfca743b47f686120300691cecd0','工厂模式','gongchangmoshi','g','1',NULL,'2018-09-27 11:16:22',NULL,'2018-09-27 11:16:21'),('e281ef86dfbb4d75b8141f8abfb7291b','建造者','jianzaozhe','j','1',NULL,'2018-09-27 11:19:00',NULL,'2018-09-27 11:18:59'),('e4bf078774b840b5a13eafa48c03a3a7','singleton','singleton','s','1',NULL,'2018-09-27 10:54:28',NULL,'2018-09-27 10:54:27'),('e6d72c095f9c4532a298337e6a612c22','script','script','s','1',NULL,'2018-09-21 12:47:09',NULL,'2018-09-21 12:47:09'),('f55bab7dc7234dfa9883c181e8d29825','hadoop','hadoop','h','1',NULL,'2018-09-27 11:29:08',NULL,'2018-09-27 11:29:08'),('fdf1a43c32a7454dbfd42626ec4d4263','thymeleaf','thymeleaf','t','1',NULL,'2018-09-28 16:52:32',NULL,'2018-09-28 16:52:31');

/*Table structure for table `system_links` */

DROP TABLE IF EXISTS `system_links`;

CREATE TABLE `system_links` (
  `id` varchar(32) COLLATE utf8mb4_bin NOT NULL,
  `aid` varchar(32) COLLATE utf8mb4_bin NOT NULL COMMENT '主表ID',
  `ext01` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext02` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext03` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext04` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext05` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `link_url` varchar(256) COLLATE utf8mb4_bin DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;

/*Data for the table `system_links` */

insert  into `system_links`(`id`,`aid`,`ext01`,`ext02`,`ext03`,`ext04`,`ext05`,`link_url`) values ('00de5fcc84f44d07ba2fd3b80098dd3a','47864f1e06334cdc8c87b9419dc63abf',NULL,NULL,NULL,NULL,NULL,'http://www.itechyou.cn'),('60534518cfa04fb8bc864119035f6970','598fb8d59fbf4bdca544d71cb64c1ce0',NULL,NULL,NULL,NULL,NULL,'http://www.baidu.com');

/*Table structure for table `system_navigate` */

DROP TABLE IF EXISTS `system_navigate`;

CREATE TABLE `system_navigate` (
  `id` varchar(32) NOT NULL,
  `nav_name` varchar(32) NOT NULL,
  `position` varchar(32) NOT NULL DEFAULT 'main' COMMENT '导航位置',
  `code` varchar(32) DEFAULT NULL,
  `create_by` varchar(32) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(32) DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ext01` varchar(32) DEFAULT NULL,
  `ext02` varchar(32) DEFAULT NULL,
  `ext03` varchar(32) DEFAULT NULL,
  `ext04` varchar(32) DEFAULT NULL,
  `ext05` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_navigate` */

insert  into `system_navigate`(`id`,`nav_name`,`position`,`code`,`create_by`,`create_time`,`update_by`,`update_time`,`ext01`,`ext02`,`ext03`,`ext04`,`ext05`) values ('2431514d8e7d4013a695dce5a1a4116a','主导航','MAIN','64JOX36S','1','2018-01-01 00:00:00','9f4b807db2e94670bb02cdc212ea7389','2018-09-21 10:04:28',NULL,NULL,NULL,NULL,NULL),('4271656947424390b4624c8b32469ff8','右侧导航','OTHER','K0K75G1O','9f4b807db2e94670bb02cdc212ea7389','2018-09-25 13:53:32',NULL,'2018-09-25 13:53:32',NULL,NULL,NULL,NULL,NULL);

/*Table structure for table `system_navigate_page` */

DROP TABLE IF EXISTS `system_navigate_page`;

CREATE TABLE `system_navigate_page` (
  `id` varchar(32) NOT NULL,
  `nav_id` varchar(32) NOT NULL,
  `page_id` varchar(32) NOT NULL,
  `parent_id` varchar(32) NOT NULL COMMENT '父Id',
  `order_by` int(11) DEFAULT NULL COMMENT '排序',
  `create_by` varchar(32) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(32) DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ext01` varchar(32) DEFAULT NULL,
  `ext02` varchar(32) DEFAULT NULL,
  `ext03` varchar(32) DEFAULT NULL,
  `ext04` varchar(32) DEFAULT NULL,
  `ext05` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_navigate_page` */

insert  into `system_navigate_page`(`id`,`nav_id`,`page_id`,`parent_id`,`order_by`,`create_by`,`create_time`,`update_by`,`update_time`,`ext01`,`ext02`,`ext03`,`ext04`,`ext05`) values ('064beaaa94a343e4b0e34c701fec8e65','4271656947424390b4624c8b32469ff8','d146d880257743019e1a0ef9f5a56652','3800c9eb484f4a3aa34db7bee70d74f8',1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-25 14:03:25',NULL,'2018-09-25 14:03:29',NULL,NULL,NULL,NULL,NULL),('2758682c6d4c4961b6cad27ce6470848','2431514d8e7d4013a695dce5a1a4116a','85b280366f0f4b50959f3c7250b195f2','-1',2,'9f4b807db2e94670bb02cdc212ea7389','2018-09-20 15:35:05',NULL,'2018-09-21 10:04:51',NULL,NULL,NULL,NULL,NULL),('3800c9eb484f4a3aa34db7bee70d74f8','4271656947424390b4624c8b32469ff8','ede3fc67b80f4d1cb8e85a6a584c9591','-1',2,'9f4b807db2e94670bb02cdc212ea7389','2018-09-25 13:57:50',NULL,'2018-09-25 13:58:00',NULL,NULL,NULL,NULL,NULL),('985b141381bb4d919d554caebf8f7603','4271656947424390b4624c8b32469ff8','29d1b262bae441dfba69d502f3c3d5db','-1',4,'9f4b807db2e94670bb02cdc212ea7389','2018-09-25 13:57:50',NULL,'2018-09-25 13:58:06',NULL,NULL,NULL,NULL,NULL),('987a45e3f7a643edaa55ffe70b6c79c8','2431514d8e7d4013a695dce5a1a4116a','a7d73370d2834393bf65299a690fe625','-1',6,'9f4b807db2e94670bb02cdc212ea7389','2018-09-20 15:35:05',NULL,'2018-09-21 10:04:53',NULL,NULL,NULL,NULL,NULL),('ab42eebc868c46b0ab1a4a67eaa3cd21','2431514d8e7d4013a695dce5a1a4116a','29d1b262bae441dfba69d502f3c3d5db','-1',5,'9f4b807db2e94670bb02cdc212ea7389','2018-09-20 15:35:05',NULL,'2018-09-21 10:04:54',NULL,NULL,NULL,NULL,NULL),('cfd16490f239419aab3a52548c8de921','4271656947424390b4624c8b32469ff8','85b280366f0f4b50959f3c7250b195f2','-1',1,'9f4b807db2e94670bb02cdc212ea7389','2018-09-25 13:57:50',NULL,'2018-09-25 13:57:54',NULL,NULL,NULL,NULL,NULL),('e51cea929a374036ad08287dca21c18f','4271656947424390b4624c8b32469ff8','9cb4c7f59b004224974a0308266f9997','-1',3,'9f4b807db2e94670bb02cdc212ea7389','2018-09-25 13:57:50',NULL,'2018-09-25 13:58:03',NULL,NULL,NULL,NULL,NULL),('f6cba297d1ea4b9bbf8a4bd9dccf4a6f','2431514d8e7d4013a695dce5a1a4116a','9cb4c7f59b004224974a0308266f9997','-1',4,'9f4b807db2e94670bb02cdc212ea7389','2018-09-20 15:35:05',NULL,'2018-09-21 10:04:55',NULL,NULL,NULL,NULL,NULL),('f7ab692d690744d4a2562da3f19cc286','2431514d8e7d4013a695dce5a1a4116a','ede3fc67b80f4d1cb8e85a6a584c9591','-1',3,'9f4b807db2e94670bb02cdc212ea7389','2018-09-20 15:35:06',NULL,'2018-09-21 10:04:58',NULL,NULL,NULL,NULL,NULL);

/*Table structure for table `system_pages` */

DROP TABLE IF EXISTS `system_pages`;

CREATE TABLE `system_pages` (
  `id` varchar(32) NOT NULL,
  `page_name` varchar(128) NOT NULL COMMENT '页面名称',
  `page_url` varchar(32) DEFAULT NULL COMMENT '页面路径',
  `page_temp` varchar(128) NOT NULL COMMENT '缩略图',
  `code` varchar(32) DEFAULT NULL COMMENT '编码',
  `status` int(11) DEFAULT '1' COMMENT '状态1显示0隐藏',
  `default_eidtor` varchar(10) NOT NULL COMMENT '默认编辑器',
  `md_content` text COMMENT 'md内容',
  `html_content` text COMMENT 'html内容',
  `create_by` varchar(32) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(32) DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_pages` */

insert  into `system_pages`(`id`,`page_name`,`page_url`,`page_temp`,`code`,`status`,`default_eidtor`,`md_content`,`html_content`,`create_by`,`create_time`,`update_by`,`update_time`) values ('29d1b262bae441dfba69d502f3c3d5db','慢生活','/life','life.html','5MES467H',1,'ue','','<p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">本文很长，记录了我博客建站初到现在的过程，还有我从毕业到现在的一个状态，感谢您的阅读，如果你还是学生，也许你能从此文中，找到我们曾经相似的地方。如果你已经工作，有自己的博客，我想，你并没有忘记当初建立个人博客的初衷吧！</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">我的个人博客已经建站有8年的时间了，对它的热爱，一直都是只增未减。回想大学读书的那几年，那会儿非常流行QQ空间，我们寝室的室友还经常邀约去学校的网吧做自己的空间。系里有个男生，空间做得非常漂亮，什么悬浮，开场动画，音乐播放器，我们女生羡慕得不得了。还邀约他跟我们一起去通宵弄空间，网上可以找到很多免费的flash资源，还有音乐，那也是第一次接触js，知道在浏览器输入一个地址，修改一下数据，就能调用一些背景出来。然后把自己QQ空间弄得漂漂亮亮的，经常邀约室友来互踩。我记得08年地震，第二天晚上，我们寝室的几个人还淡定的在寝室装扮空间呢！</span></p><p style=\"line-height: 2em; text-align: center;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><img src=\"/uploads/20180921/1537498947365090298.jpg\" title=\"1537498947365090298.jpg\" alt=\"bi01.jpg\"/></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">后来空间收费项目也多了，官方漏洞也修复了，加上临近毕业，又要忙着做毕业设计，就没再打理QQ空间。我知道现在的九零后，零零后，你们肯定没看过《一帘幽梦》，那会儿我也是疯狂追剧，喜欢上紫菱，喜欢上她的网站。想看看她的小世界，而我更想学着做一个她那样的网站。那会儿还天真的以为网上真的有她的网站，百度搜了好些天也没有。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">要毕业的时候，要交作业了，感觉自己什么都没学会。室友拉着我们去看了她同学做的网站，我们一个个佩服得五体投地，甚至觉得太不可思议了。有难度，又怕自己不会。老师教我们怎么布局，怎么做，并没有教我们右键保存网页。不知道是谁先会了这绝技，然后我们一个个又跟打了鸡血似的，疯狂在网上找网页，右键另存为。然后一个个修改文字，图片。仿佛又回到了那会儿做QQ空间那个时候。拿着copy来，并且精心修改的作品，递交了毕业设计，顺利结业。那会儿还是很蒙，一种云里雾里的感觉，竟有种不知道自己到底是会还是不会的感觉，也就是大家常说的毕业迷茫期。</span></p><p style=\"line-height: 2em; text-align: center;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><img src=\"/uploads/20180921/1537498968388041801.jpg\" title=\"1537498968388041801.jpg\" alt=\"bi02.jpg\"/></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">工作后进入社会，出去谈业务，遇到一个对网页设计超级感兴趣的人，聊了一下午都还不够，他是完全自学的，做了一个首页宣传他们的产品。他眼里的我就是专业的，总是请教我一些问题。其实我内心特羡慕人家，每次问我，我也似懂非懂的跟人家解决问题，但我还是经常靠百度来搜索他要的答案。他身上那种好学好问的那股劲儿，也成为我迫切想拥有自己的个人博客的一个重要原因。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">做博客不是说做就做的，很多东西我都不懂，也不知道要购买域名还有空间。前期要做的工作还是很多。幸好张园同学，也是我实习期的同事，他会这些，教我网上找免费的虚拟空间，然后就是把自己做的页面上传进去，还给了有一个地址，然后就能访问了。那是第一次接触，也了解了整个网站的制作过程，只可惜买域名还有空间需要费用，还在实习期的我，想想也就算了。虚拟空间毕竟是免费的，没多长时间，做过的网页就不能访问了，又得重新注册，重新上传。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">等自己有一些资金和技术后，我开始买域名和空间。从一开始，我就没想过只是练练手，或者用一段时间就行了。我会一直用下去，所以精心挑选了域名和空间。这些年除了域名没有更换外，后台程序由asp换成了php，空间从西部数据换成万网，也就是现在的阿里云。一步步升级，就想把最好的一面呈现给大家。很多人问我网站速度怎么访问那么快，其实一是网站程序，页面最好是静态页面。每次我写的代码的时候，我都在琢磨怎么减少代码，减少使用div和图片，让html结构简单化，而又不失美观。所以，网站也改版了有好几次。二是空间还有带宽。这个其实很重要，现在备案跟以前比，快很多了，快的话一星期，慢的话顶多二十天。所以，不是因为特着急的话，还是用国内空间。关于国外空间，其实现在阿里云的香港虚拟主机也不错，访问还是上传都比以前好很多了。用它的小伙伴也挺多。延伸阅读\r\n 《我的个人博客之——阿里云空间选择》</span></p><p style=\"line-height: 2em; text-align: center;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><img src=\"/uploads/20180921/1537498987937065405.jpg\" title=\"1537498987937065405.jpg\" alt=\"bi03.jpg\"/></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">个人博客，用来做什么？我刚开始就把它当做一个我吐槽心情的地方，也就相当于一个网络记事本，写上一些关于自己生活工作中的小情小事，也会放上一些照片，音乐。每天工作回家后就能访问自己的网站，一边听着音乐，一边写写文章。虽然访问人数少，我也不在乎这些，个人博客就好像我自己的一个日记本，来窥探的人多了，反而不自在了。因为博客，我还是交了不少朋友。我网站之前的logo就是网友给我设计的。</span></p><p style=\"line-height: 2em; text-align: center;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><img src=\"/uploads/20180921/1537499001238006376.jpg\" title=\"1537499001238006376.jpg\" alt=\"bi04.jpg\"/></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">后来，也是因为同学说百度搜不着我的个人博客，我才开始琢磨怎么把自己的博客排名提上去，放上去一些自己做过的模板，提供免费下载。页面以前也只有一个首页，当初我就是想着设计一个首页就行了，真正想学的人，一个页面足够了，其他页面，都靠自己设计。现在不同啦，近期版本我提供的模板都很全，实在是架不住人多都来问我怎么只有一个页面，虽然我已经在下载说明里面说得很清楚了。也就是提供了这样一些资源，我的个人博客也不再是一个只关乎自己的一个平台。曝光率越来越高，光天化日之下，哪敢放自己照片，写自己心情啊，于是乎，继续这样的模式吧，把自己写的模板放到网站上去。乐于分享，是能结交到很多朋友的。</span></p><p style=\"line-height: 2em; text-align: center;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><img src=\"/uploads/20180921/1537499014465069826.jpg\" title=\"1537499014465069826.jpg\" alt=\"bi05.jpg\"/></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">我的个人博客，在今年三月份之前是没有提供后台安装，调试这些服务的。其实一直都有人找我做个人博客，因为调试时间还有修改的问题，从上传到安装到修改调试，一般要四五个小时，我怕收费高，所以一直都是拒绝的。自从推出来《心蓝时间轴》后，主动找我做网站的也多了，他们都说是我粉丝，喜欢我的模板，所以我在模板下面写了付费说明，我的个人博客也开始有了付费项目。</span></p><p style=\"line-height: 2em; text-align: center;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><img src=\"/uploads/20180921/1537499032043065289.jpg\" title=\"1537499032043065289.jpg\" alt=\"bi06.jpg\"/></span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">我接到的第一单，是一位父亲，想给自家的宝贝建立一个博客。他说他想买一个域名，谈了好几天，最终花了8000多购买到，我挺敬佩他的，对孩子的爱，毫不吝啬。域名固然重要，其实我想说坚持用博客来记录宝贝成长点滴，才是最有价值的。第二单是一个阅读网站，从加他到跟他聊，看他朋友圈，很有才气的一个人，也相当有爱心，他的网站大部分是分享给一些爱好阅读的长者。还有些就是技术类的站长，做资讯，做旅游，做推广的。通常，从选的模板就能看出来网站类型。《心蓝时间轴》偏个人，《绅士》，《格调》偏技术，资讯。《清雅》，《水墨古典》偏文艺。但也有对我防备心的，比如说付款方式，能不能走淘宝，这些我也能理解，但是有些吧，从一开始聊，感觉就不太好，理应就认为不应该收钱，收钱干嘛，到处都是免费的，听到这些，我也慢慢解释。其实他们并不了解我，了解我的网站，只要是从我博客来的，关注过一段时间的，都知道青姐的人品是咋样的。用“心塞”这个词，毫不为过吧。</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">我做过的网站，每过一段时间，我都会一个个点击看看进展怎么样，个人博客，不像真实的面对面聊，更多的是文字的交流，不得不说有时候文字传达的信息更能了解一个人，甚至有心灵共鸣。我想我还会再重新做一个仅仅属于自己的个人博客，如果你也想要做一个博客，用来记录自己的家庭，工作，生活，或者讨女友欢心，不妨现在就开始吧！</span></p>','9f4b807db2e94670bb02cdc212ea7389','2018-09-20 15:34:08','9f4b807db2e94670bb02cdc212ea7389','2018-09-25 14:10:24'),('41df5662684144079e7f8d2d7fb11928','右侧个人介绍','','','075C4CL2',0,'ue',NULL,'<p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">网名：dancesmile | 杨青</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">职业：Web前端设计师、网页设计</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">个人微信：yangqq_1987</span></p><p style=\"line-height: 2em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">邮箱：dancesmiling@qq.com</span></p>','9f4b807db2e94670bb02cdc212ea7389','2018-09-21 11:31:10','9f4b807db2e94670bb02cdc212ea7389','2018-09-21 11:34:14'),('85b280366f0f4b50959f3c7250b195f2','关于我们','/about','about.html','8IRW7R5U',1,'ue','','<span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">杨青，女，一个80后草根女站长！09年入行。一直潜心研究web前端技术，一边工作一边积累经验，分享一些个人博客模板，以及SEO优化等心得。我入行早，大家也亲切的叫我“青姐”。</span><br/><p style=\"line-height: 2em; text-indent: 0em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">SEO奋斗了将近两年时间，个人博客网站百度排名也从之前的30页后，排到了第一页。期间有很多的不容易，但是都没有放弃过。入了这一行，就深深的喜欢上它。我喜欢一句话“冥冥中该来则来，无处可逃”。&nbsp;&nbsp; <br/></span></p><p style=\"line-height: 2em; text-indent: 0em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">近几年我也发现个人博客排前几页的也有很多是我做过的模板，感谢各位站长的欣赏，我仔细看过他们的网站。他们在我原模板的基础上有修改，而且他们做的原创内容都是值得一读的。有时候甚至排名都超过了我个人博客网站的排名。&nbsp;&nbsp;&nbsp; <br/></span></p><p style=\"line-height: 2em; text-indent: 0em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">现在很多人向我请教如何做好SEO，我想说的是，一是“代码”，一定要简单，布局要合理。二是“内容”，一定要有原创，伪原创也是可以的。三是“持续”，这是一个持续性过程，一定要有耐心，SEO不是马上生效的。</span></p><p style=\"line-height: 2em; text-indent: 0em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">自从入了这一行，也交到了不少朋友，QQ群也不断的壮大起来，280998807(交流群 <span style=\"font-size: 14px; color: rgb(255, 0, 0);\">已满员</span>)&nbsp;\r\n \r\n280998843（技术群），群里的小伙伴们也很积极的帮助新朋友解决问题，如果你想加入我们，这个大家庭的门，永远给你敞开！另外微信群已于2018.4.13日开通（已满100，只接受群主邀请，可加我个人微信进群\r\n 。我的个人微信号 yangqq_1987）</span></p><p style=\"line-height: 2em; text-indent: 0em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><br/></span></p><p style=\"line-height: 2em; text-indent: 0em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"></span></p><h2>About my blog</h2><p><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">域 名：www.yangqq.com 创建于2011年01月12日 <br/></span></p><p><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">服务器：阿里云服务器<br/></span></p><p><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">备案号：蜀ICP备11002373号-1</span></p><p><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">程 序：PHP 帝国CMS7.5</span></p><p style=\"line-height: 2em; text-indent: 0em;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\"><br/></span><br/></p>','9f4b807db2e94670bb02cdc212ea7389','2018-09-04 11:40:09','9f4b807db2e94670bb02cdc212ea7389','2018-09-25 14:10:26'),('9cb4c7f59b004224974a0308266f9997','学无止境','/course','course.html','FX9K5U1T',1,'md','','','9f4b807db2e94670bb02cdc212ea7389','2018-09-20 15:33:43',NULL,'2018-09-25 14:10:29'),('a7d73370d2834393bf65299a690fe625','留言','/gbook','gbook.html','59932UUL',1,'md','','','9f4b807db2e94670bb02cdc212ea7389','2018-09-20 15:34:33',NULL,'2018-09-25 14:10:31'),('bea30a090d754d3dbf07482261966ab9','首页','/index','index.html','S6TY1ON7',1,'md','','','9f4b807db2e94670bb02cdc212ea7389','2018-09-20 15:31:39','9f4b807db2e94670bb02cdc212ea7389','2018-09-25 14:10:34'),('d146d880257743019e1a0ef9f5a56652','后端技术','/share','share.html','ZVWKPGCF',1,'md','','','9f4b807db2e94670bb02cdc212ea7389','2018-09-25 14:03:03',NULL,'2018-09-25 14:10:36'),('edad8b460c4b4f3bb1ee781c4800a3ea','首页右侧个人介绍','/','','KH15F1C0',1,'ue',NULL,'<p style=\"line-height: 2em; text-align: center;\"><strong><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">dancesmile | 杨青</span></strong></p><p style=\"line-height: 2em; text-align: center;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei; color: rgb(49, 133, 155);\">Web前端设计师、网页设计</span></p><p style=\"line-height: 2em; text-align: left;\"><span style=\"font-size: 14px; font-family: 微软雅黑, Microsoft YaHei;\">一个80后草根女站长！09年入行。一直潜心研究web前端技术，一边工作一边积累经验，分享一些个人博客模板，以及SEO优化等心得。</span></p><p><br/></p>','9f4b807db2e94670bb02cdc212ea7389','2018-09-27 10:36:34','9f4b807db2e94670bb02cdc212ea7389','2018-09-27 10:39:47'),('ede3fc67b80f4d1cb8e85a6a584c9591','技术分享','/share','share.html','Q8G6NWF6',1,'md','','','9f4b807db2e94670bb02cdc212ea7389','2018-09-18 16:17:14','9f4b807db2e94670bb02cdc212ea7389','2018-09-25 14:10:40');

/*Table structure for table `system_products` */

DROP TABLE IF EXISTS `system_products`;

CREATE TABLE `system_products` (
  `id` varchar(32) COLLATE utf8mb4_bin NOT NULL,
  `aid` varchar(32) COLLATE utf8mb4_bin NOT NULL COMMENT '主表ID',
  `ext01` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext02` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext03` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext04` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `ext05` varchar(32) COLLATE utf8mb4_bin DEFAULT NULL,
  `shopdesc` text COLLATE utf8mb4_bin,
  `shopprice` varchar(200) COLLATE utf8mb4_bin DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;

/*Data for the table `system_products` */

/*Table structure for table `system_search` */

DROP TABLE IF EXISTS `system_search`;

CREATE TABLE `system_search` (
  `id` varchar(32) NOT NULL,
  `keywords` varchar(128) NOT NULL COMMENT '文章标题',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_search` */

insert  into `system_search`(`id`,`keywords`,`create_time`) values ('27b96c0b2575442cb34d62d1520865f0','生命','2018-09-25 16:55:49'),('38f9dd4448864a77b50a2753a01e6566','123','2018-09-29 10:13:52'),('3a009f62856e4b59b2bbbe8dc856ebe1','生命','2018-09-25 16:55:54'),('6fd3f7e5383c43d3a80231e04b274366','网页','2018-09-29 13:59:37'),('71378a798659412ba35c5bf4b049d993','生涯','2018-09-29 10:18:10'),('78c3ef5c791c41bf98c8f653b424eb3a','程序员','2018-09-25 15:17:08'),('9a022ea5908746c8be4b617dc843bad7','程序员','2018-09-25 15:13:43'),('f2c798f6baba4963ae23883d2afe41ee','程序员','2018-09-25 15:17:53');

/*Table structure for table `system_setting` */

DROP TABLE IF EXISTS `system_setting`;

CREATE TABLE `system_setting` (
  `id` varchar(32) NOT NULL,
  `website` varchar(128) NOT NULL COMMENT '网站地址',
  `title` varchar(64) NOT NULL COMMENT '站点标题',
  `keywords` varchar(128) NOT NULL COMMENT '站点关键词',
  `describe` varchar(128) NOT NULL COMMENT '站点描述',
  `icp` varchar(32) NOT NULL COMMENT '备案号',
  `copyright` varchar(128) NOT NULL COMMENT '版权',
  `uploaddir` varchar(32) DEFAULT 'uploads' COMMENT '文档HTML默认保存路径',
  `appid` varchar(128) DEFAULT NULL COMMENT '畅言appid',
  `appkey` varchar(128) DEFAULT NULL COMMENT '畅言appkey',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_setting` */

insert  into `system_setting`(`id`,`website`,`title`,`keywords`,`describe`,`icp`,`copyright`,`uploaddir`,`appid`,`appkey`) values ('1','http://localhost:8888/','Dreamer CMS 梦想家内容发布系统','Dreamer CMS 梦想家内容发布系统','Dreamer CMS 梦想家内容发布系统是国内首款java开发的内容发布系统，采用最流行的springboot+thymeleaf框架搭建，灵活小巧，配置简单。','京ICP备16039432号','Copyright © 2018 Powered by I Tech You,我教你，Dreamer CMS 梦想家内容发布系统','uploads\\','cytQcJUcb','2dd87fd430f0509cf00e18de4328e100');

/*Table structure for table `system_theme` */

DROP TABLE IF EXISTS `system_theme`;

CREATE TABLE `system_theme` (
  `id` varchar(32) NOT NULL,
  `theme_name` varchar(128) NOT NULL COMMENT '风格名称',
  `theme_author` varchar(32) DEFAULT NULL COMMENT '作者',
  `theme_img` varchar(128) NOT NULL COMMENT '缩略图',
  `theme_path` varchar(128) DEFAULT NULL COMMENT '目录名',
  `status` int(11) DEFAULT '0' COMMENT '状态1:启用0:禁用',
  `create_by` varchar(32) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(32) DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_theme` */

insert  into `system_theme`(`id`,`theme_name`,`theme_author`,`theme_img`,`theme_path`,`status`,`create_by`,`create_time`,`update_by`,`update_time`) values ('782c003ac9024eba94ae3b59dab17b5d','新主题','王俊南','http://localhost:8888/uploads\\20180921\\558bd24d87e845be89274fd9660d1258.jpg','default',1,'9f4b807db2e94670bb02cdc212ea7389','2018-01-01 00:00:00','9f4b807db2e94670bb02cdc212ea7389','2019-07-16 14:36:20'),('782c003ac9024eba94ae3b59dab17b5f','默认主题','王俊南','http://localhost:8888/uploads\\20180921\\558bd24d87e845be89274fd9660d1258.jpg','default_bak',0,'9f4b807db2e94670bb02cdc212ea7389','2018-09-05 15:21:04','9f4b807db2e94670bb02cdc212ea7389','2019-07-16 14:12:35');

/*Table structure for table `system_user` */

DROP TABLE IF EXISTS `system_user`;

CREATE TABLE `system_user` (
  `id` varchar(32) NOT NULL,
  `username` varchar(32) DEFAULT NULL COMMENT '用户名',
  `password` varchar(32) DEFAULT NULL COMMENT '密码',
  `mobile` varchar(32) DEFAULT NULL COMMENT '手机',
  `realname` varchar(32) DEFAULT NULL COMMENT '真实姓名',
  `status` int(11) DEFAULT '0' COMMENT '状态（1：启用0：禁用）',
  `page_style` varchar(32) DEFAULT NULL COMMENT '页面风格',
  `salt` varchar(64) DEFAULT NULL COMMENT '密码盐',
  `last_login_ip` varchar(32) DEFAULT NULL COMMENT '上次登录IP',
  `last_login_time` varchar(32) DEFAULT NULL COMMENT '上次登录时间',
  `portrait` varchar(32) DEFAULT NULL COMMENT '头像',
  `create_by` varchar(255) DEFAULT NULL,
  `create_time` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00',
  `update_by` varchar(255) DEFAULT NULL,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `system_user` */

insert  into `system_user`(`id`,`username`,`password`,`mobile`,`realname`,`status`,`page_style`,`salt`,`last_login_ip`,`last_login_time`,`portrait`,`create_by`,`create_time`,`update_by`,`update_time`) values ('9f4b807db2e94670bb02cdc212ea7389','wangjn','51c04b026c6cf5f785622796aba7e56f',NULL,'超级管理员',1,NULL,'d2FuZ2puMTIzNDU2',NULL,'2019-07-19 17:23:38',NULL,NULL,'2018-01-01 00:00:00',NULL,'2018-09-21 10:05:34');

/*Table structure for table `system_variable` */

DROP TABLE IF EXISTS `system_variable`;

CREATE TABLE `system_variable` (
  `ID` varchar(32) NOT NULL COMMENT '主键ID',
  `ITEM_NAME` varchar(255) DEFAULT NULL COMMENT '变量名称',
  `INFO` varchar(255) DEFAULT NULL COMMENT '描述',
  `GROUP_ID` varchar(10) DEFAULT NULL COMMENT '组ID',
  `TYPE` varchar(255) DEFAULT NULL COMMENT '字段类型',
  `VALUE` varchar(255) DEFAULT NULL COMMENT '变量值',
  `CREATE_BY` varchar(32) DEFAULT NULL COMMENT '创建人',
  `CREATE_TIME` timestamp NOT NULL DEFAULT '2018-01-01 00:00:00' COMMENT '创建时间',
  `UPDATE_BY` varchar(32) DEFAULT NULL COMMENT '修改人',
  `UPDATE_TIME` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='变量管理';

/*Data for the table `system_variable` */

insert  into `system_variable`(`ID`,`ITEM_NAME`,`INFO`,`GROUP_ID`,`TYPE`,`VALUE`,`CREATE_BY`,`CREATE_TIME`,`UPDATE_BY`,`UPDATE_TIME`) values ('2d3add7ac60949cc9035ea0bfd50f113','cfg_tel','联系电话','',NULL,'13294009514','9f4b807db2e94670bb02cdc212ea7389','2019-07-19 15:07:17',NULL,'2019-07-19 15:07:17');

/* Procedure structure for procedure `replaceArticleTags` */

/*!50003 DROP PROCEDURE IF EXISTS  `replaceArticleTags` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`wangyawei`@`%` PROCEDURE `replaceArticleTags`(in tagName varchar(64))
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE idtemp VARCHAR(32);
    DECLARE tagtemp VARCHAR(128);
    declare oldtag varchar(128);
    declare newtag varchar(128);
    DECLARE articles CURSOR FOR SELECT id,tag FROM system_article WHERE INSTR(CONCAT(CONCAT(',',tag),','), concat(concat(',',tagName),','));
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = true;
    
    OPEN articles;
    read_loop : LOOP
        FETCH articles INTO idtemp,tagtemp;
        IF done THEN
            LEAVE read_loop;
        END IF;
	
	set oldtag = CONCAT(CONCAT(',',tagName),',');
	set newtag = concat(concat(',',tagtemp),',');
	
	set newtag = replace(newtag, oldtag, ',');
	set newtag = substring(newtag,1);
	
	if instr(newtag,',') = 1 then 
		SET newtag = SUBSTRING(REVERSE(newtag),1,CHAR_LENGTH(newtag)-1);
		set newtag = reverse(newtag);
	end if;
	if instr(reverse(newtag),',') = 1 then 
		SET newtag = SUBSTRING(newtag,1,char_length(newtag)-1);
	end if;
	
	if newtag is not null then
		update system_article set tag = newtag where id = idtemp;
	end if;
    END LOOP read_loop;
    CLOSE articles;
END */$$
DELIMITER ;

/* Procedure structure for procedure `updateArticleTag` */

/*!50003 DROP PROCEDURE IF EXISTS  `updateArticleTag` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`wangyawei`@`%` PROCEDURE `updateArticleTag`(IN tagName Varchar(200))
BEGIN
   DECLARE tId VARCHAR(32);
   DECLARE temp VARCHAR(400);
   declare stop int default 0; 
   DECLARE cur CURSOR FOR (SELECT id,tag FROM system_article where tag LIKE  CONCAT('%',tagName,'%'));
   declare CONTINUE HANDLER FOR SQLSTATE '02000' SET stop = null;  
   open cur;
           FETCH cur INTO tid,temp;
	      WHILE ( stop is not null) DO  
	        update system_article set tag= left(replace(concat(temp,','),concat(tagName,','),''),length(REPLACE(CONCAT(temp,','),CONCAT(tagName,','),''))-1)
	        where id = tid;
	        FETCH cur INTO tid,temp;
	      END WHILE;
	   CLOSE cur;  
   END */$$
DELIMITER ;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
